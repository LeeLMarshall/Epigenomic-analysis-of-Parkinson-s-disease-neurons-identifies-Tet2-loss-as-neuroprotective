#------------------------------ Validation and consequences of epigenetic disruption of TET2 in PD

#---------- Sort, Filter for 30x Coverage & BetaValues

qsubs --name Sort_30xCov --array names --cmd "sort -k1,1V -k2n SAMPLE_CXreport | awk -v OFS='\t' '{if (\$4+\$5 >= 30) print \$1, \$2, \$3, \$6, \$7, \$4/(\$4+\$5) ; else print \$1, \$2, \$3, \$6, \$7, \"NA\"}' > SAMPLE_Sort_30xCov_BetaValues" 

#---------- Total Reads

qsubs --name Sort_Reads --array names --cmd "sort -k1,1V -k2n SAMPLE_CXreport | awk -v OFS='\t' '{print \$1, \$2, \$3, \$6, \$7, \$4+\$5}' > SAMPLE_Sort_Reads"

#--------- MERGE BetaValues

for i in `seq 143` ; do 
if [ ${i} == 1 ]
then
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "chr","loc","loc1","type","seq","str","'${NAME}'"} 
{print $1,$2,$2+1,$4,$5,$3,$6}' ${NAME}_Sort_30xCov_BetaValues > CXreport_Sort_30xCov_BetaValues
else
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "'${NAME}'"} {print $6}' ${NAME}_Sort_30xCov_BetaValues > test1
paste CXreport_Sort_30xCov_BetaValues test1 > test2
mv test2 test1
mv test1 CXreport_Sort_30xCov_BetaValues
fi
done &

#--------- MERGE Total Reads

for i in `seq 143` ; do 
if [ ${i} == 1 ]
then
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "chr","loc","loc1","type","seq","str","'${NAME}'"} 
{print $1,$2,$2+1,$4,$5,$3,$6}' ${NAME}_Sort_Reads > CXreport_Sort_Reads
else
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "'${NAME}'"} {print $6}' ${NAME}_Sort_Reads > test3
paste CXreport_Sort_Reads test3 > test4
mv test4 test3
mv test3 CXreport_Sort_Reads
fi
done &

#-------- QC Plots

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/CXreports")
library(readr)
BetaValues <- read_delim("CXreport_Sort_30xCov_BetaValues","\t",escape_double=FALSE,trim_ws=TRUE)
covar <- read_delim("covar","\t",escape_double=FALSE,trim_ws=TRUE)

#------- NA omit

BetaValues_noNA <- na.omit(BetaValues)
write.table(BetaValues_noNA,"CXreport_Sort_30xCov_BetaValues_noNA.txt",quote=FALSE,sep ="\t",row.names=FALSE)

#------- BA4 removal

BetaValues_noNA_noMSA <- BetaValues_noNA[,1:109]
write.table(BetaValues_noNA,"CXreport_Sort_30xCov_BetaValues_noNA_noMSA.txt",quote=FALSE,sep ="\t",row.names=FALSE)

#------- WGA removal
BetaValues_noNA_noMSA_noWGA <- BetaValues_noNA[,1:108]
write.table(BetaValues_noNA,"CXreport_Sort_30xCov_BetaValues_noNA_noMSA_noWGA.txt",quote=FALSE,sep ="\t",row.names=FALSE)

#-------- Correlation Number

library(reshape2)
correl <- cor(BetaValues_noNA_noMSA_noWGA[,7:ncol(BetaValues_noNA_noMSA_noWGA)], method ="pearson")
write.csv(correl,"CXreport_Sort_30xCov_BetaValues_noNA_noMSA_noWGA_PearsonCor.csv")

#---------- Biological Replicates

correl["B10","F12"] # 0.9574475

#---------- Technical Replicates

correl["E5","P2A10"] # 0.9617845
correl[c("D9","P2A8"),c("D9","P2A9")] # 0.9592056 0.9556162 0.9684295

#---------- Average Correlation

library(reshape2)
melted_correl <- melt(correl, na.rm = TRUE)
mean(melted_correl$value,na.rm=FALSE)
# 0.949952

#---------- Outliers Below correlation >= 0.9

aggregate(melted_correl$value, by=list(Category=melted_correl$Var2), FUN=mean)
H11

#---------- Correlation Plot

library(corrplot)
colramp <- colorRampPalette(c("#053061","#2166AC","#4393C3","#92C5DE","#D1E5F0","#FFFFFF", "#FDDBC7", "#F4A582","#D6604D","#B2182B","#67001F"))
corrplot(correl, method="circle", col = colramp(200), title = "BetaValues_noNA_noBA4_noWGA",mar = c(1, 1, 2, 1), order="hclust", addrect=2,tl.cex = 0.4,tl.col = "black")
dev.copy(png,"CXreport_Sort_30xCov_BetaValues_noNA_noMSA_noWGA_PearsonCor_corrplot.png",width=2000,height=2000,res=200)
dev.off()

#---------- Dendogram

library(reshape2)
stdev <- matrix(data = 0, nrow = nrow(BetaValues_noNA), ncol = 1)
colnames(stdev) <- c("STDEV")
BetaValues_noNA <- BetaValues_noNA_noMSA_noWGA

for (i in 1:nrow(BetaValues_noNA)){ 
stdev[i,1] <- sd(BetaValues_noNA[i,7:ncol(BetaValues_noNA)],na.rm = TRUE)
next
}

BetaValues_noNA_STDEV <- data.frame(BetaValues_noNA,stdev)

#---------- Order by STDEV 

BetaValues_noNA_STDEV <- BetaValues_noNA_STDEV[order(-BetaValues_noNA_STDEV$STDEV),]

#---------- Top10,000 

BetaValues_noNA_STDEV <- BetaValues_noNA_STDEV[1:10000,]

#-------- Transpose

BetaValues_noNA_STDEV_t <- t(BetaValues_noNA_STDEV[,7:ncol(BetaValues_noNA)])

#-------- Dendextend

library(dendextend)
dend <- as.dendrogram(hclust(dist(BetaValues_noNA_STDEV_t)))
plot(dend,type="rectangle",ylab="Distance",main="BetaValues noNA Top10,000 STDEV")

#--------  Colour Labels

colours <- c("purple","green")[factor(covar$Replicate)]
labels_colors(dend) <- colours[order.dendrogram(dend)]
plot(dend,type="rectangle",ylab="Distance",main="BetaValues noNA Top10,000 STDEV")

#-------- Colour Bars

library(RColorBrewer)
display.brewer.all()
bars <- cbind(heat.colors(50)[covar$PMI], heat.colors(100)[covar$AGE], c("green4","orange3","red3","blue3")[factor(covar$Group)], c("blue3","red3")[factor(covar$SEX)])
#colours <- topo.colors(13)[Covar$REPLICATES]
#labels_colors(dend) <- colours[order.dendrogram(dend)]
par(mar = c(6,4.5,2,0))
labels_cex(dend) <- 0.5
plot(dend, type = "rectangle",ylab="Height",main="BetaValues noNA Top10,000 STDEV")
colored_bars(colors=bars,dend=dend,rowLabels=c("PMI","Age","Group","Sex"),cex.rowLabels=0.7,y_shift=-10,text_shift=0)
dev.copy(png,"CXreport_Sort_30xCov_BetaValues_noNA_dendrogram.png",width=1000,height=1000,res=200)
dev.off()

#---------- R Remove Imprinted genes

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/Padlock_Enhancer_Probes")
library(readr)
Targets <- read_table2("PD_Enh_Probes_Target_intersect.bed",col_names = FALSE)
Imprited_genes <- Targets[!grepl("^E0|^adult",Targets$X4),]
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/PD_Auto_Lyso_GWAS_SNCA_Probes")
Targets <- read_table2("PD_Auto_Lyso_GWAS_SNCA_Probes_Target_intersect.bed",col_names = FALSE)

#---------- Remove Imprinted genes

Targets_rmImprited <- subset(Targets, !(Targets$X4 %in% Imprited_genes$X4))
write.table(Targets_rmImprited,file = 'PD_Auto_Lyso_GWAS_SNCA_Probes_Target_intersect_rmImprited.bed', quote=FALSE, sep='\t', col.names = FALSE, row.names=FALSE)

#---------- Bedtools intersect target regions (1bp added to end of target region) 

sed '1d' CXreport_Sort_30xCov_BetaValues > CXreport_Sort_30xCov_BetaValues.bed

#---------- Filter C's only in Target Regions

module load bedtools/2.25.0
bedtools intersect -wa -s -u -a CXreport_Sort_30xCov_BetaValues.bed -b PD_Auto_Lyso_GWAS_SNCA_Probes_Target_intersect_rmImprited.bed > CXreport_Sort_30xCov_BetaValues_Target.bed
head -n1 CXreport_Sort_30xCov_BetaValues > header
cat header CXreport_Sort_30xCov_BetaValues_Target.bed > CXreport_Sort_30xCov_BetaValues_Target.txt

#--------- Import Original Data

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/CXreports")
library(readr)
BetaValues <- read_delim("CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg.tsv", "\t", escape_double=FALSE, trim_ws=TRUE) 
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
covar <- read_delim("covar_subset","\t",escape_double=FALSE,trim_ws=TRUE)

#--------- Subset Betavalues

BetaValues_subset <- cbind(BetaValues[,1:6],BetaValues[,names(BetaValues) %in% covar$SAMPLE])
write.table(BetaValues_subset,file="CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg.tsv",row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")

#--------- 70%Count & rmAllNA & Comm SNPs

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/CXreports")
rm(list = ls())
library(readr)
SNPlist <- read_delim("SNPlist_Common_Eur_Afr_phase3.txt"," ", escape_double=FALSE,col_names=FALSE,trim_ws=TRUE)
colnames(SNPlist) <- c("chr","SNP","RS","Common","Varients")
TotalReads <- read_delim("CXreport_Sort_Reads","\t",escape_double=FALSE,trim_ws=TRUE) 
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
Covar <- read_delim("covar_subset","\t",escape_double=FALSE,trim_ws=TRUE)
BetaValues <- read_delim("CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg.tsv","\t", escape_double=FALSE, trim_ws=TRUE) 

#--------- Filter Cs >= 30% NAs)

BetaValues_30na <- BetaValues[rowSums(is.na(BetaValues[,-1:-6])) <= nrow(Covar)*0.3,]

#--------- Filter Cs with all 0% 

BetaValues_30na <- BetaValues_30na[rowSums(BetaValues_30na[,-1:-6],na.rm=TRUE) > 0,] 

#--------- Filter Cs for Common SNPs

BetaValues_30na <- subset(BetaValues_30na, !((paste(BetaValues_30na$chr, BetaValues_30na$loc, sep="_") %in% paste(SNPlist$chr, SNPlist$SNP, sep="_")))) 

#--------- Write

write.table(BetaValues_30na,file="CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg_30na_rm0_SNP.tsv",row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")

#--------- Filter Coverage

BetaValues <- BetaValues_30na
Reads <- subset(TotalReads[which(paste(TotalReads$chr,TotalReads$loc,sep="_") %in% paste(BetaValues$chr,BetaValues$loc,sep="_")),])

#---------- NA <= 30x Coverage

Reads_30x <- Reads
Reads_30x[,-1:-6][Reads_30x[,-1:-6] <= 30] <- NA

#---------- Remove Outliers

Reads_30x <- subset(Reads_30x[,names(Reads_30x) %in% Covar$SAMPLE])
Reads_30x <- cbind(Reads[,1:6],Reads_30x)

#--------- Write

write.table(Reads_30x,file="CXreport_Sort_Reads_30xCov_Target_Outliers_RepAvg_30na_rm0_SNP.tsv",row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")

#----------- Methylkit

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
rm(list = ls())
covar <- read_delim("covar_subset","\t",escape_double=FALSE,trim_ws=TRUE)
BetaValues <- 
read_delim("CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg_30na_rm0_SNP.tsv", "\t",escape_double=FALSE,trim_ws=TRUE)
Reads <- read_delim("CXreport_Sort_Reads_30xCov_Target_Outliers_RepAvg_30na_rm0_SNP.tsv", "\t",escape_double=FALSE,trim_ws=TRUE)

#---------- Create CXreports

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset/30xCov_Target_Outliers_RepAvg_30na_rm0_SNP")

for (i in 1:nrow(covar)) 
{
x <- covar$SAMPLE[i]
CXreport <-cbind(chrBase=paste(BetaValues$chr,BetaValues$loc,sep="."), chr=BetaValues$chr, base=BetaValues$loc, strand=BetaValues$str, coverage=round(Reads[,x],digits=0), freqC=round(BetaValues[,x]*100,digits=2), freqT=round(100-(BetaValues[,x]*100),digits=2))
names(CXreport)[5:7] <- c("coverage","freqC","freqT")
CXreport[is.na(CXreport)] <- 0
write.table(CXreport, paste(x,"Sort_30xCov_Target_Outliers_RepAvg_30na_rm0_SNP",sep="_"), row.names=FALSE, col.names=TRUE, quote=FALSE, sep="\t")
next
}

#---------- CpG and CpH PDvsCTRL

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset/30xCov_Target_Outliers_RepAvg_30na_rm0_SNP")
files <- as.data.frame(list.files(path = ".", pattern = "^.*SNP$", all.files = FALSE,full.names = FALSE, recursive = FALSE,ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE))
names(files) <- "CXreports"
files$SAMPLE <- gsub("_.*$","",files$CXreports)
files <- files[order(match(files$SAMPLE,covar$SAMPLE)),]
fileslist <- as.list(as.character(files[,1]))

#---------- MethylRead

library(methylKit)
library(gtools)
Group <- as.numeric(as.character(factor(covar$Group,labels=c(0,1))))
methyl <- methRead(location=fileslist,sample.id=as.list(covar$SAMPLE), assembly="hg19", treatment=Group, pipeline=list(fraction=FALSE, chr.col=2, start.col=3, end.col=3, coverage.col=5, strand.col=4, freqC.col=6))

#---------- MethylUnite

methylu <- unite(methyl,destrand=FALSE,min.per.group=1L,mc.cores=6)
methylunite <- as.data.frame(as(methylu,"GRanges")) 
methylunite$seqnames <- as.character(methylunite$seqnames)
methylunite <- methylunite[order(methylunite$start),]
methylunite <- methylunite[mixedorder(methylunite$seqnames),]

#---------- MethylDMC

covariates <- as.data.frame(model.matrix(~Group+AGE+PMI+proportions_GLU, data=covar))
covariates <- covariates[,3:5]

myDiff <- calculateDiffMeth(methylu, covariates=covariates, overdispersion="MN",adjust="fdr", test="Chisq", mc.cores=6)
myDifference <- as.data.frame(as(myDiff,"GRanges")) 
myDifference$seqnames <- as.character(myDifference$seqnames)
myDifference <- myDifference[order(myDifference$start),]
myDifference <- myDifference[mixedorder(myDifference$seqnames),]

#---------- Export

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
write.csv(methylunite,"Methylkit_PDvsCTRL_age_pmi_propGLU_methyl.csv",row.names=FALSE)
write.csv(myDifference,"Methylkit_PDvsCTRL_age_pmi_propGLU.csv",row.names=FALSE)
myDifference_pval <- myDifference[myDifference$pvalue <= 0.05,]
write.csv(myDifference_pval,"Methylkit_PDvsCTRL_age_pmi_propGLU_0.05pval.csv",row.names=FALSE)
myDifference_FDR <- myDifference[myDifference$qvalue <= 0.05,]
write.csv(myDifference_FDR,"Methylkit_PDvsCTRL_age_pmi_propGLU_0.05FDR.csv",row.names=FALSE)

#---------- GVIZ

if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("Gviz", version = "3.8")
library(Gviz)
library(GenomicRanges)
library(knitr)
library(grid)
library(ggbio)
library(GenomicInteractions)
library(InteractionSet)

rm(list = ls())
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/CXreports")
Probes <- 
read_delim("PD_Auto_Lyso_GWAS_SNCA_Probes_Target_intersect_rmImprited.bed", "\t", escape_double=FALSE, trim_ws=TRUE, col_names=FALSE)
names(Probes) <- c("chr","start","end","name","score","strand")
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
myDifference <- 
read_delim("Methylkit_PDvsCTRL_age_pmi_propGLU.csv", ",",escape_double=FALSE,trim_ws=TRUE)
myDifference_FDR <- 
read_delim("Methylkit_PDvsCTRL_age_pmi_propGLU_0.05FDR.csv", ",",escape_double=FALSE,trim_ws=TRUE)

#---------- Gene

gene <- cbind("chr4",106000000,106300000,"TET2","hg19")

#---------- Ideogram

itrack <- IdeogramTrack(genome = gene[,5], chromosome = gene[,1], fontcolor="black",fontface=2,fontsize=12)

#---------- Genome

gtrack <- GenomeAxisTrack(genome = gene[,5], chromosome = gene[,1], fontcolor="black", fontface=2, fontsize=10, col="black")

#---------- Biomart

biotrack <- BiomartGeneRegionTrack(genome=gene[,5], chromosome=gene[,1], start=as.numeric(gene[,2]), end=as.numeric(gene[,3]), name="Ensemble", transcriptAnnotation="symbol", filter=list(with_ox_refseq_mrna=TRUE), fontcolor.group="black",fontface.group=2, fill="orange2", background.title="lightgray", col.title="black")
plotTracks(list(itrack,gtrack,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- Probes

Probe <- Probes[grep(paste("^",gene[,1],"$",sep=""),Probes$chr),]
Probe <- AnnotationTrack(genome=gene[,5], chromosome=gene[,1], stacking="dense", start=Probe$start, end=Probe$end, name="Probes", background.title="lightgray", col.title="black", fontsize=12, rotation.title=90,
col="transparent", fill="darkorchid4", min.width=0.5)
plotTracks(list(itrack,gtrack,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- Total C's Sign PValue

Csign <- cbind(myDifference[,1:3],sign(myDifference$meth.diff) * -log10(myDifference$pvalue))
names(Csign) <- c("chr","start","end","sign_log10_Pvalue")
Csign <- Csign[grep(paste("^",gene[,1],"$",sep=""),Csign$chr),]
Csign_track <- DataTrack(genome=gene[,5], chromosome=gene[,1], type="p", start=Csign$start, end=Csign$end, data=Csign$sign_log10_Pvalue, name="Sign\n-log10(Pvalue)", background.title="lightgray", col.title="black", fontface=1, fontface.title=1, fontsize=12, col="darkblue", cex.axis=0.5, col.axis="black", lty.baseline=c(1,2,2), col.baseline=c("black","darkred","darkred"), baseline=c(0,-log10(0.00068958), log10(0.00068958)))
#ylim=c(-15,15)
#plotTracks(list(itrack,gtrack,Csign_track,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- DMC Methylation Difference

DMC <- cbind(myDifference_FDR[,1:3],myDifference_FDR[,8])
names(DMC) <- c("chr","start","end","DMC_MethDiff")
DMC <- DMC[grep(paste("^",gene[,1],"$",sep=""),DMC$chr),]
DMC_track <- DataTrack(genome=gene[,5], chromosome=gene[,1], type=c("p"), start=DMC$start, end=DMC$end, data=DMC$DMC_MethDiff, name="DMC\nMethylation (%)", background.title="lightgray", col.title="black", fontface=1, fontface.title=1, fontsize=12, col="darkred", cex.axis=0.5, col.axis="black", baseline=0, col.baseline="black", lty.baseline=1, line.title=1)
#ylim=c(-10,10)

#---------- DMC Methylation Difference

TotalC <- cbind(myDifference[,1:3],myDifference[,8])
names(TotalC) <- c("chr","start","end","TotalC")
TotalC <- TotalC[grep(paste("^",gene[,1],"$",sep=""),TotalC$chr),]
TotalC_track <- DataTrack(genome=gene[,5], chromosome=gene[,1], type=c("p","smooth"), start=TotalC$start, end=TotalC$end, data=TotalC$TotalC, name="TotalC\nMethylation (%)", background.title="lightgray", col.title="black", fontface=1, fontface.title=1, fontsize=12, col="darkgreen", cex.axis=0.5, col.axis="black", baseline=0, col.baseline="black", lty.baseline=1, line.title=1)
plotTracks(list(itrack,gtrack,Csign_track,DMC_track,TotalC_track,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#----------- PD34vsCTRL & PD56vsCTRL

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
rm(list = ls())
covar <- read_delim("covar_subset","\t",escape_double=FALSE,trim_ws=TRUE)
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset/30xCov_Target_Outliers_RepAvg_30na_rm0_SNP")
files <- as.data.frame(list.files(path = ".", pattern = "^.*SNP$", all.files = FALSE,full.names = FALSE, recursive = FALSE,ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE))
names(files) <- "CXreports"
files$SAMPLE <- gsub("_.*$","",files$CXreports)
files <- files[order(match(files$SAMPLE,covar$SAMPLE)),]

#------------ PD34vsCTRL

covar34 <- covar[covar$PD_Braak_Stage %in% c(0,3,4),]
files34 <- files[covar$PD_Braak_Stage %in% c(0,3,4),]
files34 <- as.list(as.character(files34[,1]))

#---------- MethylRead

library(methylKit)
library(gtools)
Group <- as.numeric(as.character(factor(covar34$Group,labels=c(0,1))))
methyl34 <- methRead(location=files34,sample.id=as.list(covar34$SAMPLE), assembly="hg19", treatment=Group, pipeline=list(fraction=FALSE, chr.col=2, start.col=3, end.col=3, coverage.col=5, strand.col=4, freqC.col=6))

#---------- MethylUnite

methylu34 <- unite(methyl34, destrand=FALSE, min.per.group=1L, mc.cores=6)

#---------- MethylDMC

covariates34 <- as.data.frame(model.matrix(~Group+AGE+PMI+proportions_GLU, data=covar34))
covariates34 <- covariates34[,3:5]
myDiff34 <- calculateDiffMeth(methylu34, covariates=covariates34, overdispersion="MN",adjust="fdr", test="Chisq", mc.cores=6)
myDifference34 <- as.data.frame(as(myDiff34,"GRanges")) 
myDifference34$seqnames <- as.character(myDifference34$seqnames)
myDifference34 <- myDifference34[order(myDifference34$start),]
myDifference34 <- myDifference34[mixedorder(myDifference34$seqnames),]

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
write.csv(myDifference34,"Methylkit_PD34vsCTRL_age_pmi_propGLU.csv",row.names=FALSE)
myDifference34_pval <- myDifference34[myDifference34$pvalue <= 0.05,]
write.csv(myDifference34_pval,"Methylkit_PD34vsCTRL_age_pmi_propGLU_0.05pval.csv",row.names=FALSE)
myDifference34_FDR <- myDifference34[myDifference34$qvalue <= 0.05,]
write.csv(myDifference34_FDR,"Methylkit_PD34vsCTRL_age_pmi_propGLU_0.05FDR.csv",row.names=FALSE)

#---------- PD56vsCTRL

covar56 <- covar[covar$PD_Braak_Stage %in% c(0,5,6),]
files56 <- files[covar$PD_Braak_Stage %in% c(0,5,6),]
files56 <- as.list(as.character(files56[,1]))

#---------- MethylRead

library(methylKit)
library(gtools)
Group <- as.numeric(as.character(factor(covar56$Group,labels=c(0,1))))
methyl56 <- methRead(location=files56,sample.id=as.list(covar56$SAMPLE), assembly="hg19", treatment=Group, pipeline=list(fraction=FALSE, chr.col=2, start.col=3, end.col=3, coverage.col=5, strand.col=4, freqC.col=6))

#---------- MethylUnite

methylu56 <- unite(methyl56, destrand=FALSE, min.per.group=1L, mc.cores=6)

#---------- MethylDMC

covariates56 <- as.data.frame(model.matrix(~Group+AGE+PMI+proportions_GLU, data=covar56))
covariates56 <- covariates56[,3:5]
myDiff56 <- calculateDiffMeth(methylu56, covariates=covariates56, overdispersion="MN",adjust="fdr", test="Chisq", mc.cores=6)
myDifference56 <- as.data.frame(as(myDiff56,"GRanges")) 
myDifference56$seqnames <- as.character(myDifference56$seqnames)
myDifference56 <- myDifference56[order(myDifference56$start),]
myDifference56 <- myDifference56[mixedorder(myDifference56$seqnames),]

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
write.csv(myDifference56,"Methylkit_PD56vsCTRL_age_pmi_propGLU.csv",row.names=FALSE)
myDifference56_pval <- myDifference56[myDifference56$pvalue <= 0.05,]
write.csv(myDifference56_pval,"Methylkit_PD56vsCTRL_age_pmi_propGLU_0.05pval.csv",row.names=FALSE)
myDifference56_FDR <- myDifference56[myDifference56$qvalue <= 0.05,]
write.csv(myDifference56_FDR,"Methylkit_PD56vsCTRL_age_pmi_propGLU_0.05FDR.csv",row.names=FALSE)

#---------- GVIZ PD56

if (!requireNamespace("BiocManager", quietly = TRUE)) install.packages("BiocManager")
BiocManager::install("Gviz", version = "3.8")
library(Gviz)
library(GenomicRanges)
library(knitr)
library(grid)
library(ggbio)
library(GenomicInteractions)
library(InteractionSet)

rm(list = ls())
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/CXreports")
Probes <- 
read_delim("PD_Auto_Lyso_GWAS_SNCA_Probes_Target_intersect_rmImprited.bed", "\t", escape_double=FALSE, trim_ws=TRUE, col_names=FALSE)
names(Probes) <- c("chr","start","end","name","score","strand")
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/fulldata/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_preprocessing/methylkit_subset")
myDifference56 <- 
read_delim("Methylkit_PD56vsCTRL_age_pmi_propGLU.csv", ",",escape_double=FALSE,trim_ws=TRUE)
myDifference56_FDR <- 
read_delim("Methylkit_PD56vsCTRL_age_pmi_propGLU_0.05FDR.csv", ",", escape_double=FALSE, trim_ws=TRUE)

#---------- Gene

gene <- cbind("chr4",106000000,106300000,"TET2","hg19")

#---------- Ideogram

itrack <- IdeogramTrack(genome = gene[,5], chromosome = gene[,1], fontcolor="black",fontface=2,fontsize=12)

#---------- Genome

gtrack <- GenomeAxisTrack(genome = gene[,5], chromosome = gene[,1], fontcolor="black", fontface=2, fontsize=10, col="black")

#---------- Biomart

biotrack <- BiomartGeneRegionTrack(genome=gene[,5], chromosome=gene[,1], start=as.numeric(gene[,2]), end=as.numeric(gene[,3]), name="Ensemble", transcriptAnnotation="symbol", filter=list(with_ox_refseq_mrna=TRUE), fontcolor.group="black",fontface.group=2, fill="orange2", background.title="lightgray", col.title="black")
plotTracks(list(itrack,gtrack,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- Probes

Probe <- Probes[grep(paste("^",gene[,1],"$",sep=""),Probes$chr),]
Probe <- AnnotationTrack(genome=gene[,5], chromosome=gene[,1], stacking="dense", start=Probe$start, end=Probe$end, name="Probes", background.title="lightgray", col.title="black", fontsize=12, rotation.title=90,
col="transparent", fill="darkorchid4", min.width=0.5)
plotTracks(list(itrack,gtrack,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- Total C's Sign PValue

Csign <- cbind(myDifference56[,1:3],sign(myDifference56$meth.diff) * -log10(myDifference56$pvalue))
names(Csign) <- c("chr","start","end","sign_log10_Pvalue")
Csign <- Csign[grep(paste("^",gene[,1],"$",sep=""),Csign$chr),]
Csign_track <- DataTrack(genome=gene[,5], chromosome=gene[,1], type="p", start=Csign$start, end=Csign$end, data=Csign$sign_log10_Pvalue, name="Sign\n-log10(Pvalue)", background.title="lightgray", col.title="black", fontface=1, fontface.title=1, fontsize=12, col="darkblue", cex.axis=0.5, col.axis="black", lty.baseline=c(1,2,2), col.baseline=c("black","darkred","darkred"), baseline=c(0,-log10(0.00098), log10(0.00098)))
#ylim=c(-15,15)
#plotTracks(list(itrack,gtrack,Csign_track,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- DMC Methylation Difference

DMC <- cbind(myDifference56_FDR[,1:3],myDifference56_FDR[,8])
names(DMC) <- c("chr","start","end","DMC_MethDiff")
DMC <- DMC[grep(paste("^",gene[,1],"$",sep=""),DMC$chr),]
DMC_track <- DataTrack(genome=gene[,5], chromosome=gene[,1], type=c("p"), start=DMC$start, end=DMC$end, data=DMC$DMC_MethDiff, name="DMC\nMethylation (%)", background.title="lightgray", col.title="black", fontface=1, fontface.title=1, fontsize=12, col="darkred", cex.axis=0.5, col.axis="black", baseline=0, col.baseline="black", lty.baseline=1, line.title=1)
#ylim=c(-10,10)
plotTracks(list(itrack,gtrack,Csign_track,DMC_track,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

#---------- DMC Methylation Difference

TotalC <- cbind(myDifference[,1:3],myDifference[,8])
names(TotalC) <- c("chr","start","end","TotalC")
TotalC <- TotalC[grep(paste("^",gene[,1],"$",sep=""),TotalC$chr),]
TotalC_track <- DataTrack(genome=gene[,5], chromosome=gene[,1], type=c("p","smooth"), start=TotalC$start, end=TotalC$end, data=TotalC$TotalC, name="TotalC\nMethylation (%)", background.title="lightgray", col.title="black", fontface=1, fontface.title=1, fontsize=12, col="darkgreen", cex.axis=0.5, col.axis="black", baseline=0, col.baseline="black", lty.baseline=1, line.title=1)
plotTracks(list(itrack,gtrack,Csign_track,DMC_track,TotalC_track,Probe,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))

setwd("/Volumes/projects_secondary/labrie/lee_marshall/Resources/Roadmap_chromHMM18")

NIH RoadMap
You can downoad all the Chromatin data and find all the information you need from the following link:
https://egg2.wustl.edu/roadmap/web_portal/
E071: Brain Hippocampus Middle
E072: Brain Inferior Temporal Lobe
E073: Brain Dorsolateral Prefrontal Cortex
E074: Brain Substantia Nigeria

library(rtracklayer)
E073 <- import("E073_25_imputed12marks_dense.bed", format="bed")
E073 <- data.frame(E073)

#---------- Promoter

Promoter <- E073[grep(paste("^",gene[,1],"$",sep=""),E073$seqnames),]
Promoter <- Promoter[grep("Prom", Promoter$name), ]
Promoter <- AnnotationTrack(genome=gene[,5], chromosome=gene[,1], stacking="dense", start=Promoter$start, end=Promoter$end, name="Promoter", background.title="lightgray", col.title="black", fontsize=12, rotation.title=90, col="transparent", fill="darkorchid4", min.width=0.5)

#---------- Enhancer

Enhancer <- E073[grep(paste("^",gene[,1],"$",sep=""),E073$seqnames),]
Enhancer <- Enhancer[grep("EnhA", Enhancer$name), ]
Enhancer <- AnnotationTrack(genome=gene[,5], chromosome=gene[,1], stacking="dense", start=Enhancer$start, end=Enhancer$end, name="Enhancer", background.title="lightgray", col.title="black", fontsize=12, rotation.title=90, col="transparent", fill="darkorchid4", min.width=0.5)
plotTracks(list(itrack,gtrack,Csign_track,DMC_track,Probe,Promoter,Enhancer,biotrack),from=as.numeric(gene[,2]),to=as.numeric(gene[,3]))



#--------- Padlock Alignment 

#--------- FASTQC

mkdir fastqc
module load fastqc/0.11.5/
qsubs --name fastqc_pretrim --array names --cmd \
fastqc --outdir factqc --format fastq \
fastq_merged/SAMPLE_R1_001.fastq.gz fastq_merged/SAMPLE_R2_001.fastq.gz

#--------- TRIMGALORE

mkdir trimgalore
module load fastqc/0.11.5/
module load trimgalore/0.4.4/

qsubs --name trimgalore_7clip --array names --cmd \
trim_galore fastq_merged/SAMPLE_R1_001.fastq.gz fastq_merged/${SAMPLE}_R2_001.fastq.gz \
--quality 20 --phred33 --fastqc --illumina --paired --length 50 \
--clip_R1 7 --output_dir trimgalore

#--------- BISMARK ALIGN PROBE MASKED ENSEMBLE_GRCh37

mkdir Bismark_Ensembl_GRCh37_ProbeMaskedFA
module load bismark/0.17.0/
module load bowtie2/2.3.1/
module load samtools/1.4/

qsubs --name bismark_enh_padlock_align --array names --cores 6 --cmd \
bismark --multicore 6 --fastq --pbat --unmapped --ambiguous \
--output_dir Bismark_Ensembl_GRCh37_ProbeMaskedFA --ambig_bam --nucleotide_coverage --bowtie2 -N 0 -p 2 \
../PD_Padlock_enh/Padlock_Enhancer_Probes/bismark_ProbeMaskedFA_Ensemble_genome \
-1 trimgalore/SAMPLE_R1_001_val_1.fq.gz -2 trimgalore/SAMPLE_R2_001_val_2.fq.gz

#--------- BISMARK METHYL EXTRACTOR PROBE MASKED ENSEMBLE_GRCh37

mkdir Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX
module load bismark/0.17.0/
module load bowtie2/2.3.1/
module load samtools/1.4/

qsubs --name bismark_enh_padlock_methyext --array names --cores 9 --cmd \
bismark_methylation_extractor --multicore 9 --paired-end --no_overlap \
--output Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX --gzip --bedGraph --CX --cytosine_report --CX \
--genome_folder ../PD_Padlock_enh/Padlock_Enhancer_Probes/bismark_ProbeMaskedFA_Ensemble_genome \
Bismark_Ensembl_GRCh37_ProbeMaskedFA/SAMPLE_R1_001_val_1_bismark_bt2_pe.bam

#-------- CXreport - Sort, Filter for 30x Coverage & BetaValues

qsubs --name Sort_30xCov --array names --cmd "sort -k1,1V -k2n SAMPLE_CX_report | awk -v OFS='\t' '{if (\$4+\$5 >= 30) print \$1, \$2, \$3, \$6, \$7, \$4/(\$4+\$5) ; else print \$1, \$2, \$3, \$6, \$7, \"NA\"}' > SAMPLE_Sort_30xCov_BetaValues" 

#-------- Total Reads

qsubs --name Sort_Reads --array names --cmd "sort -k1,1V -k2n SAMPLE_CX_report | awk -v OFS='\t' '{print \$1, \$2, \$3, \$6, \$7, \$4+\$5}' > SAMPLE_Sort_Reads"

#--------- MERGE BetaValues

for i in `seq 20` ; do 
if [ ${i} == 1 ]
then
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "chr","loc","loc1","type","seq","str","'${NAME}'"} 
{print $1,$2,$2+1,$4,$5,$3,$6}' ${NAME}_Sort_30xCov_BetaValues > CXreport_Sort_30xCov_BetaValues
else
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "'${NAME}'"} {print $6}' ${NAME}_Sort_30xCov_BetaValues > test1
paste CXreport_Sort_30xCov_BetaValues test1 > test2
mv test2 test1
mv test1 CXreport_Sort_30xCov_BetaValues
fi
done &

#--------- MERGE Total Reads

for i in `seq 20` ; do 
if [ ${i} == 1 ]
then
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "chr","loc","loc1","type","seq","str","'${NAME}'"} 
{print $1,$2,$2+1,$4,$5,$3,$6}' ${NAME}_Sort_Reads > CXreport_Sort_Reads
else
NAME=`head -n ${i} names | tail -n1`
awk -v OFS='\t' 'BEGIN{print "'${NAME}'"} {print $6}' ${NAME}_Sort_Reads > test3
paste CXreport_Sort_Reads test3 > test4
mv test4 test3
mv test3 CXreport_Sort_Reads
fi
done &

#-------- QC Plots

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger")
library(readr)
BetaValues <- read_delim("CXreport_Sort_30xCov_BetaValues","\t",escape_double=FALSE,trim_ws=TRUE)
covar <- read_delim("covar","\t",escape_double=FALSE,trim_ws=TRUE)

#------- NA omit

BetaValues_noNA <- na.omit(BetaValues)
write.table(BetaValues_noNA,"CXreport_Sort_30xCov_BetaValues_noNA.txt",quote=FALSE,sep ="\t",row.names=FALSE)

#------- Pearsons Correlation

correl <- cor(BetaValues_noNA[,7:ncol(BetaValues_noNA)], method ="pearson")
write.csv(correl,"CXreport_Sort_30xCov_BetaValues_noNA_PearsonCor.csv")

#---------- Average Correlation

library(reshape2)
melted_correl <- melt(correl, na.rm = TRUE)
mean(melted_correl$value,na.rm=FALSE)
# 0.9742833

#---------- Outliers Below correlation >= 0.9

aggregate(melted_correl$value, by=list(Category=melted_correl$Var2), FUN=mean)

#---------- R Remove Imprinted genes

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger")
library(readr)
Targets <- read_table2("PD_Enh_Probes_Target_intersect.bed",col_names = FALSE)
Imprited_genes <- Targets[!grepl("^E0|^adult",Targets$X4),]

#---------- Remove Imprinted genes

Targets_rmImprited <- subset(Targets, !(Targets$X4 %in% Imprited_genes$X4))
write.table(Targets_rmImprited,file = 'PD_Enh_Probes_Target_intersect_rmImprited.bed', quote=FALSE, sep='\t', col.names = FALSE, row.names=FALSE)

#---------- Bedtools intersect target regions (1bp added to end of target region) 

sed '1d' CXreport_Sort_30xCov_BetaValues > CXreport_Sort_30xCov_BetaValues.bed

#---------- Filter C's only in Target Regions

module load bedtools/2.25.0
bedtools intersect -wa -s -u -a CXreport_Sort_30xCov_BetaValues.bed -b PD_Enh_Probes_Target_intersect_rmImprited.bed > CXreport_Sort_30xCov_BetaValues_Target.bed
head -n1 CXreport_Sort_30xCov_BetaValues > header
cat header CXreport_Sort_30xCov_BetaValues_Target.bed > CXreport_Sort_30xCov_BetaValues_Target.txt

#----------- Removing Outliers

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_auto/appendix/Bismark_Ensembl_GRCh37_ProbeMaskedFA_CX_PFC/CXreports")
rm(list = ls())
library(readr)
BetaValues_Target <- read_delim("CXreport_Sort_30xCov_BetaValues_Target.txt","\t",escape_double=FALSE,trim_ws=TRUE) 
covar <- read_delim("covar","\t",escape_double=FALSE,trim_ws=TRUE)

#--------- Remove Outliers OFB

BetaValues_Outliers <-BetaValues_Target[,-grep("WGA",names(BetaValues_Target))]
covar_Outliers <- covar[-grep("WGA",covar$SAMPLE),]
write.table(BetaValues_Outliers,file="CXreport_Sort_30xCov_BetaValues_Target_Outliers.tsv", row.names=FALSE, col.names=TRUE, quote=FALSE, sep="\t")
write.table(covar_Outliers,file="Covar_Outliers",row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")

#---------- Average Replicates

rm(list = ls())
library(readr)
BetaValues_Outliers <- read_delim("CXreport_Sort_30xCov_BetaValues_Target_Outliers.tsv", "\t", escape_double=FALSE, trim_ws=TRUE) 
Covar_Outliers <- read_delim("Covar_Outliers","\t",escape_double=FALSE,trim_ws=TRUE)

#---------- Replicates Average

NT4 <- rowMeans(BetaValues_Outliers[,c("NT4","RNT4")],na.rm=TRUE)
BetaValues_Outliers$NT4 <- NT4
BetaValues_Outliers <- BetaValues_Outliers[,names(BetaValues_Outliers) != "RNT4"]
Covar_Outliers <- Covar_Outliers[Covar_Outliers$SAMPLE != "RNT4",]

T4 <- rowMeans(BetaValues_Outliers[,c("T4","RT4")],na.rm=TRUE)
BetaValues_Outliers$T4 <- T4
BetaValues_Outliers <- BetaValues_Outliers[,names(BetaValues_Outliers) != "RT4"]
Covar_Outliers <- Covar_Outliers[Covar_Outliers$SAMPLE != "RT4",]
write.table(BetaValues_Outliers,file="CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg.tsv", row.names=FALSE, col.names=TRUE, quote=FALSE,sep="\t")
write.table(Covar_Outliers, file="Covar_Outliers_RepAvg", row.names=FALSE, col.names=TRUE, quote=FALSE, sep="\t")

#---------- Filter Cs

library(readr)
SNPlist <- read_delim("SNPlist_Common_Eur_Afr_phase3.txt"," ", escape_double=FALSE,col_names=FALSE,trim_ws=TRUE)
colnames(SNPlist) <- c("chr","SNP","RS","Common","Varients")

#--------- Filter Cs >= 30% NAs)

BetaValues_Outliers_30na <- BetaValues_Outliers[rowSums(is.na(BetaValues_Outliers[,-1:-6])) <= nrow(Covar_Outliers)*0.3,]

#--------- Filter Cs with all 0% 

BetaValues_Outliers_30na_rm0 <- BetaValues_Outliers_30na[rowSums(BetaValues_Outliers_30na[,-1:-6],na.rm=TRUE) > 0,] 

#--------- Filter Cs for Common SNPs

BetaValues_Outliers_30na_rm0_SNP <- subset(BetaValues_Outliers_30na_rm0, !((paste(BetaValues_Outliers_30na_rm0$chr, BetaValues_Outliers_30na_rm0$loc, sep="_") %in% paste(SNPlist$chr, SNPlist$SNP, sep="_")))) 

#--------- Write
write.table(BetaValues_Outliers_30na_rm0_SNP, file="CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg_30na_rm0_SNP.tsv", row.names=FALSE, col.names=TRUE, quote=FALSE, sep="\t")

BetaValues <- BetaValues_Outliers_30na_rm0_SNP 

#---------- Filter Coverage

TotalReads <- read_delim("CXreport_Sort_Reads","\t",escape_double=FALSE,trim_ws=TRUE) 

#---------- Subset Total 

Reads <- subset(TotalReads[which(paste(TotalReads$chr,TotalReads$loc,sep="_") %in% paste(BetaValues$chr,BetaValues$loc,sep="_")),])

#---------- NA <= 30x Coverage

Reads_30x <- Reads
Reads_30x[,-1:-6][Reads_30x[,-1:-6] <= 30] <- NA

#---------- Replicates Average

NT4 <- rowMeans(Reads_30x[,c("NT4","RNT4")],na.rm=TRUE)
Reads_30x$NT4 <- NT4
Reads_30x <- Reads_30x[,names(Reads_30x) != "RNT4"]

T4 <- rowMeans(Reads_30x[,c("T4","RT4")],na.rm=TRUE)
Reads_30x$T4 <- T4
Reads_30x <- Reads_30x[,names(Reads_30x) != "RT4"]

#--------- Remove Outliers OFB

Reads_30x_Outliers <-Reads_30x[,-grep("WGA",names(Reads_30x))]

#--------- Write

write.table(Reads_30x_Outliers,file="CXreport_Sort_Reads_30xCov_Target_Outliers_RepAvg_30na_rm0_SNP.tsv",row.names=FALSE,col.names=TRUE,quote=FALSE,sep="\t")

#--------- Methylkit

rm(list=ls())
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger")
library(readr)
covar <- read_delim("covar_outliers.tsv","\t",escape_double=FALSE,trim_ws=TRUE)
BetaValues <- 
read_delim("CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg_30na_rm0_SNP.tsv","\t",escape_double=FALSE,trim_ws=TRUE)
Reads <- read_delim("CXreport_Sort_Reads_30xCov_Target_Outliers_RepAvg_30na_rm0_SNP.tsv","\t",escape_double=FALSE,trim_ws=TRUE)

#---------- Create CXreports

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger/methylkit/30xCov_Target_Outliers_RepAvg_30na_rm0_SNP")

for (i in 1:16) 
{
x <- covar$SAMPLE[i]
CXreport <-cbind(chrBase=paste(BetaValues$chr,BetaValues$loc,sep="."), chr=BetaValues$chr, base=BetaValues$loc, strand=BetaValues$str, coverage=round(Reads[,x],digits=0), freqC=round(BetaValues[,x]*100,digits=2), freqT=round(100-(BetaValues[,x]*100),digits=2))
names(CXreport)[5:7] <- c("coverage","freqC","freqT")
CXreport[is.na(CXreport)] <- 0
write.table(CXreport, paste(x,"Sort_30xCov_Target_Outliers_RepAvg_30na_rm0_SNP",sep="_"), row.names=FALSE, col.names=TRUE, quote=FALSE, sep="\t")
next
}

#--------- CpG and CpH PDvsCTRL

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger")
library(readr)
covar <- read_delim("covar_outliers.tsv","\t",escape_double=FALSE,trim_ws=TRUE)
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger/methylkit/30xCov_Target_Outliers_RepAvg_30na_rm0_SNP")

#---------- methylKit

library(methylKit)
library(gtools)
files <- as.data.frame(list.files(path = ".", pattern = "^.*SNP$", all.files = FALSE,full.names = FALSE, recursive = FALSE,ignore.case = FALSE, include.dirs = FALSE, no.. = FALSE))
names(files) <- "CXreports"
files$SAMPLE <- gsub("_.*$","",files$CXreports)
files <- files[order(match(files$SAMPLE,covar$SAMPLE)),]
fileslist <- as.list(as.character(files[,1]))
Group <- as.numeric(as.character(factor(covar$siRNA,labels=c(0,1))))
methyl <- methRead(location=fileslist,sample.id=as.list(covar$SAMPLE), assembly="hg19", treatment=Group, pipeline=list(fraction=FALSE, chr.col=2, start.col=3, end.col=3, coverage.col=5, strand.col=4, freqC.col=6))

#---------- DMC

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit")
# destrand=TRUE for only CpG
methylu <- unite(methyl,destrand=FALSE,min.per.group=1L,mc.cores=6)
methylunite <- as.data.frame(as(methylu,"GRanges")) 
methylunite <- methylunite[order(methylunite$start),]
methylunite <- methylunite[mixedorder(methylunite$seqnames),]
write.csv(methylunite,"Methylkit_SHSY5Y_TET2siRNAvsNT.csv",row.names=FALSE)

#---------- Differential 

myDiff <- calculateDiffMeth(methylu,covariates=NULL,overdispersion="MN",adjust="fdr",test="Chisq",mc.cores=6)
myDifference <- as.data.frame(as(myDiff,"GRanges")) 
myDifference$seqnames <- as.character(myDifference$seqnames)
myDifference <- myDifference[order(myDifference$start),]
myDifference <- myDifference[mixedorder(myDifference$seqnames),]
myDifference$seq <- BetaValues$seq
myDifference$type <- BetaValues$type
write.csv(myDifference,"Methylkit_SHSY5Y_TET2siRNAvsNT_DMCs.csv",row.names=FALSE)
myDifference_pval <- myDifference[myDifference$pvalue <= 0.05,]
write.csv(myDifference_pval,"Methylkit_SHSY5Y_TET2siRNAvsNT_DMCs_0.05pval.csv",row.names=FALSE)
myDifference_FDR <- myDifference[myDifference$qvalue <= 0.05,]
write.csv(myDifference_FDR,"Methylkit_SHSY5Y_TET2siRNAvsNT_DMCs_0.05FDR.csv",row.names=FALSE)

#------------ Enrichment

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/edger/methylkit")

#---------- PD Enhancer DMCs

PDEnh <- read_delim("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/Torronto_CXreports/Methylkit/DMC/Methylkit_PDvsCTRL_age_sex_pmi_propGLU.tsv", "\t", escape_double = FALSE, trim_ws = TRUE)
PDEnh$start <- PDEnh$start - 1
PDEnh$Names <- paste(PDEnh$seqnames, PDEnh$end, sep="_")
PDEnh_PVAL <- PDEnh[PDEnh$pvalue <= 0.05,]
PDEnh_PVAL_1diff <- PDEnh_PVAL[abs(PDEnh_PVAL$meth.diff) >= 1,]
PDEnh_FDR <- PDEnh[PDEnh$qvalue <= 0.05,]
PDEnh_FDR_1diff <- PDEnh_FDR[abs(PDEnh_FDR$meth.diff) >= 1,]

904511 PDEnh of which 504430 have increased methylation 55.8%
96323 PDEnh_PVAL 10.6% of which 61752 have increased methylation 64.1%
46035 PDEnh_PVAL_1diff 5.1% of which 31491 have increased methylation 68.4%
1799 PDEnh_FDR 0.2% of which 1337 have increased methylation 74.3%
1085 PDEnh_FDR_1diff 0.1% of which 756 have increased methylation 69.7%

phyper(1337, 504430, 904511-504430, 1799, lower.tail=FALSE) 2.859937e-60
phyper(756, 504430, 904511-504430, 1085, lower.tail=FALSE) 2.056595e-21


#---------- TET2siRNA DMCs

TET2siRNA <- myDifference
TET2siRNA$Names <- paste(TET2siRNA$seqnames, TET2siRNA$start, sep="_")
TET2siRNA_PVAL <- TET2siRNA[TET2siRNA$pvalue <= 0.05,]
TET2siRNA_PVAL_1diff <- TET2siRNA_PVAL[abs(TET2siRNA_PVAL$meth.diff) >= 1,]
TET2siRNA_FDR <- TET2siRNA[TET2siRNA$qvalue <= 0.05,]
TET2siRNA_FDR_1diff <- TET2siRNA_FDR[abs(TET2siRNA_FDR$meth.diff) >= 1,]

1031160 TET2siRNA of which 508724 have increased methylation 49.3%
90005 TET2siRNA_PVAL 8.7% of which 35016 have increased methylation 38.9%
25918 TET2siRNA_PVAL_1diff 2.5% of which 10135 have increased methylation 39.1%
636 TET2siRNA_FDR 0.06% of which 301 have increased methylation 47.3%
467 TET2siRNA_FDR_1diff 0.045% of which 279 have increased methylation 59.7% 

phyper(10135, 508724, 1031160-508724, 25918, lower.tail=TRUE) 1.978666e-246
write.table(TET2siRNA_PVAL_1diff, file = "Methylkit_SHSY5Y_TET2siRNAvsNT_DMCs_0.05pval_1diff.csv", append=F, quote=F, sep = ",", row=F, col=T)

#---------- TET2siRNA DMCs enriched in PD Enhancer DMCs

sum(TET2siRNA_PVAL$Names %in% PDEnh$Names) 73852
sum(TET2siRNA_PVAL$Names %in% PDEnh_PVAL$Names) 7886
phyper(7886, 96323, 904511-96323, 73852, lower.tail=FALSE) 0.3922417

sum(TET2siRNA_PVAL_1diff$Names %in% PDEnh$Names) 19511
sum(TET2siRNA_PVAL_1diff$Names %in% PDEnh_PVAL_1diff$Names) 1868
phyper(1868, 46035, 904511-46035, 19511, lower.tail=FALSE) 2.154909e-148

sum(TET2siRNA_FDR$Names %in% PDEnh$Names) 496
sum(TET2siRNA_FDR$Names %in% PDEnh_FDR$Names) 1
phyper(1, 1799, 904511-1799, 496, lower.tail=FALSE) 0.2592698

sum(TET2siRNA_FDR_1diff$Names %in% PDEnh$Names) 333
sum(TET2siRNA_FDR_1diff$Names %in% PDEnh_FDR_1diff$Names) 1
phyper(1, 1085, 904511-1085, 333, lower.tail=FALSE) 0.06127764

#---------- PD Enhancer DMCs enriched in TET2siRNA DMCs

sum(PDEnh_PVAL$Names %in% TET2siRNA$Names) 91833
sum(PDEnh_PVAL$Names %in% TET2siRNA_PVAL$Names) 7886
phyper(7886, 90005, 1031160-90005, 91833, lower.tail=FALSE) 0.9434325

sum(PDEnh_PVAL_1diff$Names %in% TET2siRNA$Names) 43735
sum(PDEnh_PVAL_1diff$Names %in% TET2siRNA_PVAL_1diff$Names) 1868
phyper(1868, 25918, 1031160-25918, 43735, lower.tail=FALSE) 2.593117e-107

sum(PDEnh_FDR$Names %in% TET2siRNA$Names) 1720
sum(PDEnh_FDR$Names %in% TET2siRNA_FDR$Names) 1
phyper(1, 636, 1031160-636, 1720, lower.tail=FALSE) 0.2866434

sum(PDEnh_FDR_1diff$Names %in% TET2siRNA$Names) 1034
sum(PDEnh_FDR_1diff$Names %in% TET2siRNA_FDR_1diff$Names) 1
phyper(1, 467, 1031160-467, 1034, lower.tail=FALSE) 0.08063008

#--------- TET2siRNA DMCs enriched in PD Enhancer DMCs

1031160 TET2siRNA of which 508724 have increased methylation 49.3%
25918 TET2siRNA_PVAL_1diff 2.5% of which 10135 have increased methylation 39.1%
phyper(10135, 508724, 1031160-508724, 25918, lower.tail=TRUE) 1.978666e-246

enrichment <- data.frame(rbind(Background=c(522436, 508724),Significant=c(15783, 10135)))
names(enrichment) <- c("Hypo-methylation","Hyper-methylation")
fisher.test(enrichment, alternative="less")
odds ratio = 0.6594586 
p-value < 2.2e-16

#---------- Barplot

library("ggplot2")
percentage <- data.frame(rbind(background=c(50.7,49.3),significant=c(60.9,39.1)))
names(percentage) <- c("Hypo-methylation","Hyper-methylation")
percentage$Context <- rownames(percentage)
percentage <- melt(percentage, id="Context")

ggplot(data=percentage, aes(x=variable, y=value, fill=Context)) +
geom_bar(stat="identity", position=position_dodge(), width=0.75) +
scale_y_continuous(expand = c(0,0), limits = c(0,100)) +
labs(x="",y="DNA Modification %") +
scale_fill_manual(values=c("brown", "dodgerblue3")) +
theme_classic() + 
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title=element_text(hjust = 0.5,size=12,face="bold.italic",family="Helvetica"),
axis.title.x=element_text(size=16,family="Helvetica"),
axis.title.y=element_text(size=18,family="Helvetica"),
axis.text.x=element_text(colour="black",size=16,family="Helvetica",angle=0,vjust=0),
axis.text.y=element_text(colour="black",size=12,family="Helvetica"),
axis.text=element_text(size=18),
legend.position="none",legend.title=element_blank(),legend.text=element_text(size=16))

904511 PDEnh of which 504430 have increased methylation 55.8%
46035 PDEnh_PVAL_1diff 5.1% of which 31491 have increased methylation 68.4%

sum(TET2siRNA_PVAL_1diff$Names %in% PDEnh$Names) 19511
sum(TET2siRNA_PVAL_1diff$Names %in% PDEnh_PVAL_1diff$Names) 1868
phyper(1868, 46035, 904511-46035, 19511, lower.tail=FALSE) 2.154909e-148

enrichment <- data.frame(rbind(PDEnh=c(858476,46035),TET2siRNA_PVAL_1diff=c(17643,1868)))
names(enrichment) <- c("Background","Significant")
fisher.test(enrichment, alternative="greater")
odds ratio = 1.974449 
p-value < 2.2e-16

TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff <- TET2siRNA_PVAL_1diff[TET2siRNA_PVAL_1diff$Names %in% PDEnh_PVAL_1diff$Names,]
PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff <- PDEnh_PVAL_1diff[PDEnh_PVAL_1diff$Names %in% TET2siRNA_PVAL_1diff$Names,]
TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff$PDEnhmeth.diff <- PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff$meth.diff

1031160 TET2siRNA of which 508724 have increased methylation 49.3%
1868 TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff  
482 hyper in PDEnh & hyper TET2 
623 hyper in PDEnh & hypo TET2
405 hypo in PDEnh & hypo TET2
358 hypo in PDEnh & hyper TET2

enrichment <- data.frame(rbind(Background=c(522436, 508724),Significant=c(1028, 840)))
names(enrichment) <- c("Hypo-methylation","Hyper-methylation")
fisher.test(enrichment, alternative="less")
odds ratio = 0.8391461 
p-value = 8.758e-05

enrichment <- data.frame(rbind(Background=c(522436, 508724),Significant=c(623, 482)))
names(enrichment) <- c("Hypo-methylation","Hyper-methylation")
fisher.test(enrichment, alternative="less")
odds ratio = 0.794531 
p-value = 8.052e-05

enrichment <- data.frame(rbind(Background=c(522436, 508724),Significant=c(405, 358)))
names(enrichment) <- c("Hypo-methylation","Hyper-methylation")
fisher.test(enrichment, alternative="less")
odds ratio = 0.9077891 
p-value = 0.09718

#----------- shinyCircos & Circa

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit")

#----------- PDEnh_PVAL_1diff

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit/shinyCircos")

PDEnh_PVAL_1diff_bed <- cbind(PDEnh_PVAL_1diff[,1:3])
PDEnh_PVAL_1diff_bed$value <- sign(PDEnh_PVAL_1diff$meth.diff) * (-1) * log10(PDEnh_PVAL_1diff$pvalue)
PDEnh_PVAL_1diff_bed$seqnames <- gsub("chr","",PDEnh_PVAL_1diff_bed$seqnames)
#PDEnh_PVAL_1diff_bed <- rbind(c(1,1,2,15),c(1,1,2,-15),PDEnh_PVAL_1diff_bed)
PDEnh_PVAL_1diff_bed$value <- round(PDEnh_PVAL_1diff_bed$value, digits = 2)

PDEnh_PVAL_1diff_bed_hyper <- PDEnh_PVAL_1diff_bed[PDEnh_PVAL_1diff_bed$value > 0,]
PDEnh_PVAL_1diff_bed_hypo <- PDEnh_PVAL_1diff_bed[PDEnh_PVAL_1diff_bed$value < 0,]

write.table(PDEnh_PVAL_1diff_bed_hyper, file="PDEnh_PVAL_1diff_bed_hyper.csv", append=FALSE, quote=FALSE, sep=",", row.names=FALSE, col.names=TRUE)
write.table(PDEnh_PVAL_1diff_bed_hypo, file="PDEnh_PVAL_1diff_bed_hypo.csv", append=FALSE, quote=FALSE, sep=",", row.names=FALSE, col.names=TRUE)

#----------- TET2siRNA_PVAL_1diff

TET2siRNA_PVAL_1diff_bed <- cbind(TET2siRNA_PVAL_1diff[,1:3])
TET2siRNA_PVAL_1diff_bed$value <- sign(TET2siRNA_PVAL_1diff$meth.diff) * (-1) * log10(TET2siRNA_PVAL_1diff$pvalue)
TET2siRNA_PVAL_1diff_bed$seqnames <- gsub("chr","",TET2siRNA_PVAL_1diff_bed$seqnames)
#TET2siRNA_PVAL_1diff_bed <- rbind(c(1,1,2,25),c(1,3,4,-25),TET2siRNA_PVAL_1diff_bed)
TET2siRNA_PVAL_1diff_bed$value <- round(TET2siRNA_PVAL_1diff_bed$value, digits = 2)

TET2siRNA_PVAL_1diff_bed_hyper <- TET2siRNA_PVAL_1diff_bed[TET2siRNA_PVAL_1diff_bed$value > 0,]
TET2siRNA_PVAL_1diff_bed_hypo <- TET2siRNA_PVAL_1diff_bed[TET2siRNA_PVAL_1diff_bed$value < 0,]

write.table(TET2siRNA_PVAL_1diff_bed_hyper, file="TET2siRNA_PVAL_1diff_bed_hyper.csv", append=FALSE, quote=FALSE, sep=",", row.names=FALSE, col.names=TRUE)
write.table(TET2siRNA_PVAL_1diff_bed_hypo, file="TET2siRNA_PVAL_1diff_bed_hypo.csv", append=FALSE, quote=FALSE, sep=",", row.names=FALSE, col.names=TRUE)

#------------ Heatmap

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/Torronto_CXreports/CXreports")
library(readr)
library(gtools)
library(pheatmap)
library(RColorBrewer)
library(viridis)
library(dendsort)
library(vegan)
library(gplots)
library(squash)

PDEnh_covar <- read_delim("Covar_Outliers_RepAvg_Prop.tsv","\t",escape_double=FALSE,trim_ws=TRUE)
PDEnh_BetaValues <- 
read_delim("CXreport_Sort_30xCov_BetaValues_Target_Outliers_RepAvg_30na_rm0_SNP.tsv","\t",escape_double=FALSE,trim_ws=TRUE)

#---------- Intersect

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit")
TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff <- TET2siRNA_PVAL_1diff[TET2siRNA_PVAL_1diff$Names %in% PDEnh_PVAL_1diff$Names,]
PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff <- PDEnh_PVAL_1diff[PDEnh_PVAL_1diff$Names %in% TET2siRNA_PVAL_1diff$Names,]
TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff$PDEnhmeth.diff <- PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff$meth.diff

ggplot(data=TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff, aes(x=meth.diff, y=PDEnhmeth.diff)) + 
geom_point(size=0.1, colour="grey")

#---------- Zscore BetaValues 

TET2siRNA_PVAL_1diff_inter_beta <- BetaValues[paste(BetaValues$chr,BetaValues$loc,sep="_") %in% TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff$Names,-1:-6]
rownames(TET2siRNA_PVAL_1diff_inter_beta) <- TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff$Names
PDEnh_PVAL_1diff_inter_beta <- PDEnh_BetaValues[paste(PDEnh_BetaValues$chr,PDEnh_BetaValues$loc,sep="_") %in% PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff$Names,-1:-6]
rownames(PDEnh_PVAL_1diff_inter_beta) <- PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff$Names
colnames(PDEnh_PVAL_1diff_inter_beta) <- paste(PDEnh_covar$Group,PDEnh_covar$SAMPLE,sep="_")

cal_z_score <- function(x){
(x - mean(x, na.rm=TRUE)) / sd(x, na.rm=TRUE)
}

TET2siRNA_PVAL_1diff_inter_beta_zscore <- t(apply(TET2siRNA_PVAL_1diff_inter_beta, 1, cal_z_score))
PDEnh_PVAL_1diff_inter_beta_zscore <- t(apply(PDEnh_PVAL_1diff_inter_beta, 1, cal_z_score))

TET2siRNA_PVAL_1diff_inter_beta_zscore[is.na(TET2siRNA_PVAL_1diff_inter_beta_zscore)] <- 0
PDEnh_PVAL_1diff_inter_beta_zscore[is.na(PDEnh_PVAL_1diff_inter_beta_zscore)] <- 0

#---------- Pheatmap
 
mycol <- colorRampPalette(c("blue1","blue1","blue1","black","red1","red1","red1"))(100)
ann <- data.frame(Braak=PDEnh_covar$PD_Braak_Stage)
rownames(ann) <- colnames(PDEnh_PVAL_1diff_inter_beta)
anncol <- list(Braak=c("white","red1","red2","red3","red4"))
pheatmap(mat=PDEnh_PVAL_1diff_inter_beta_zscore, color=mycol, annotation_col=ann, annotation_colors=anncol, cutree_rows=2, cluster_cols=FALSE, clustering_distance_rows="correlation",show_rownames=FALSE)

mycol1 <- colorRampPalette(c("blue4","black","red4"))(100)
ann1 <- data.frame(TET2=as.numeric(as.factor(covar$siRNA)))
rownames(ann1) <- colnames(TET2siRNA_PVAL_1diff_inter_beta)
anncol1 <- list(TET2=c("chartreuse3","red4"))
pheatmap(mat=TET2siRNA_PVAL_1diff_inter_beta_zscore, color=mycol1, annotation_col=ann1, annotation_colors=anncol1, cutree_rows=2, cluster_cols=FALSE, clustering_distance_rows="correlation",show_rownames=FALSE)

data <-  data.frame(PDEnh_PVAL_1diff_inter_beta_zscore, TET2siRNA_PVAL_1diff_inter_beta_zscore, PDEnh=PDEnh_PVAL_1diff_inter_TET2siRNA_PVAL_1diff$meth.diff, TET2siRNA=TET2siRNA_PVAL_1diff_inter_PDEnh_PVAL_1diff$meth.diff)
data <- data[order(data$PDEnh + data$TET2siRNA, decreasing=TRUE),]
data_pospos <- data[data$PDEnh > 0 & data$TET2siRNA > 0,]
data_posneg <- data[data$PDEnh > 0 & data$TET2siRNA < 0,]
data_negpos <- data[data$PDEnh < 0 & data$TET2siRNA > 0,]
data_negneg <- data[data$PDEnh < 0 & data$TET2siRNA < 0,]
data <- rbind(data_pospos,data_posneg,data_negpos,data_negneg)
data <- data[,-122:-123]

mycol <- colorRampPalette(c("blue1","blue1","blue1","blue1","blue1","black","red1","red1","red1","red1","red1"))(100)
pheatmap(mat=data, color=mycol, cluster_cols=FALSE, cluster_rows=FALSE, show_rownames=FALSE)

#---------- Average Controls zscore

data_pdenh <- data[,1:105]
avg_score <- function(x){
(x - mean(x[1:48], na.rm=TRUE))
}
data_pdenh <- t(apply(data_pdenh, 1, avg_score))
mycol <- colorRampPalette(c("blue1","blue3","black","red3","red1"))(50)
pheatmap(mat=data_pdenh, color=mycol, cluster_cols=FALSE, cluster_rows=FALSE, show_rownames=FALSE)
data_tet2 <- data[,106:121]

avg_score <- function(x){
(x - mean(x[1:8], na.rm=TRUE))
}
data_tet2 <- t(apply(data_tet2, 1, avg_score))
mycol <- colorRampPalette(c("blue1","blue1","blue4","black","red4","red1","red1"))(100)
pheatmap(mat=data_tet2, color=mycol, cluster_cols=FALSE, cluster_rows=FALSE, show_rownames=FALSE)

#---------- GREAT & HOMER Pathways

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/Torronto_CXreports/Methylkit/DMC")

#---------- Input Data

GREAT_HOMER <-read_csv("Methylkit_PDvsCTRL_age_sex_pmi_propGLU_GREAT_HOMER_melt.csv")

#-------- Associated Genes

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit")
GREAT_HOMER_back <- unique(GREAT_HOMER$value)
GREAT_HOMER_pospos <- unique(GREAT_HOMER[GREAT_HOMER$NAME %in% rownames(data_posneg),"value"])
write.table(GREAT_HOMER_back,"Methylkit_SHSY5Y_TET2siRNAvsNT_Great_Homer_genes.tsv", sep="\t", row.names=FALSE, col.names=FALSE, quote=FALSE)
write.table(GREAT_HOMER_pospos,"Methylkit_SHSY5Y_TET2siRNAvsNT_hypo_PVAL_1diff_intersect_PDEnh_hyper_PVAL_1diff_Great_Homer_genes.tsv", sep="\t", row.names=FALSE, col.names=FALSE, quote=FALSE)

#---------- Metacore 

Methylkit_SHSY5Y_TET2siRNAvsNT_Great_Homer_genes.tsv = TET2siRNAvsNT_background
Methylkit_SHSY5Y_TET2siRNAvsNT_hypo_PVAL_1diff_intersect_PDEnh_hyper_PVAL_1diff_Great_Homer_genes.tsv = TET2siRNAvsNT_hypo_PVAL_1diff_intersect_PDEnh_hyper_PVAL_1diff
background = right click export as list
tools -> set threshold and background
tools -> workflows -> enrichment analysis workflows
TET2siRNAvsNT_1diff_PD_Enh_hyper_PVAL_1diff_genelist

#---------- Homer + GREAT DMC Boxplot

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/Torronto_CXreports/Methylkit/DMC")
library(readr)
networks <- read.delim("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit/TET2siRNAvsNT_hypo_PVAL_1diff_intersect_PDEnh_hyper_PVAL_1diff_metacore_networks.tsv")
networks$Order <- 10:1

library(ggplot2)
ggplot(data=networks, aes(x=reorder(Networks,Order), y=-log10(p.value))) +
geom_bar(stat="identity",fill="chartreuse4") +
coord_flip() +
labs(x="",y="-log10(P Value)",title="Networks") +
geom_hline(yintercept=-log10(0.0025), linetype="dashed", color = "red", size=1) +
theme_classic() + 
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title=element_text(hjust = 0.5,size=16,family="Helvetica"),
axis.title.x=element_text(size=14,family="Helvetica"),
axis.text.x=element_text(colour="black",size=12,family="Helvetica"),
axis.text.y=element_text(colour="black",size=14,family="Helvetica"))
processes <- read.delim("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit/TET2siRNAvsNT_hypo_PVAL_1diff_intersect_PDEnh_hyper_PVAL_1diff_metacore_processes.tsv")
processes$Order <- 10:1

library(ggplot2)
ggplot(data=processes, aes(x=reorder(Processes,Order), y=-log10(p.value))) +
geom_bar(stat="identity",fill="chartreuse4") +
coord_flip() +
labs(x="",y="-log10(P Value)",title="Processes") +
geom_hline(yintercept=-log10(5.379e-05), linetype="dashed", color = "red", size=1) +
theme_classic() + 
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title=element_text(hjust = 0.5,size=16,family="Helvetica"),
axis.title.x=element_text(size=14,family="Helvetica"),
axis.text.x=element_text(colour="black",size=12,family="Helvetica"),
axis.text.y=element_text(colour="black",size=14,family="Helvetica"))

#---------- TET2 qpcr box plot 

setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD_Padlock_enh/SHSY5Y_TET2KD/methylkit")
TET2qpcr <- data.frame(GROUP=rep(c("NT","KD"),each=6),FoldChange=c(-0.43,0.44,-0.01,0.09,0.01,-0.10,-1.85,-1.40,-1.66,-1.00,-1.10,-1.42))

library(ggplot2)
ggplot(data=TET2qpcr, aes(x=GROUP, y=FoldChange, color=GROUP)) +
geom_boxplot() + 
scale_x_discrete(limits=c("NT","KD")) +
geom_jitter(shape=16, position=position_jitter(0.15), size=3) +
scale_color_manual(values=c("darkorange3", "grey50")) +
scale_y_continuous(expand = c(0,0), limits = c(-2,0.5)) +
labs(x="",y="TET2 (fold change)") +
theme_classic() + 
theme(plot.margin = unit(c(0.5,0.5,0.5,0.5), "cm"),
plot.title=element_text(hjust = 0.5,size=12,face="bold.italic",family="Helvetica"),
axis.title.x=element_text(size=14,family="Helvetica"),
axis.title.y=element_text(size=14,family="Helvetica"),
axis.text.x=element_text(colour="black",size=12,family="Helvetica"),
axis.text.y=element_text(colour="black",size=10,family="Helvetica"),
axis.text=element_text(size=18),
legend.position="none")




#------------------------------ PD induced dopaminergic neurons 

#-------- GSE125239
 
module load sratoolkit/2.8.2-1
qsubs --name sratoolkit_prefetch --array Run_accession --test --cmd "prefetch -X 20G SAMPLE"
qsubs --name sratoolkit_fastqdump --array Run_accession --test --cmd "fastq-dump --split-files ~/labrie-secondary/ncbi/sra/SAMPLE.sra --outdir fastq"
while read line ; do mv $(awk '{print $1"_1.fastq",$2"_R1.fastq"}' <<<$line) ; done < ../names
while read line ; do mv $(awk '{print $1"_2.fastq",$2"_R2.fastq"}' <<<$line) ; done < ../names
qsubs --names gzip_fastqc --array names --cmd "gzip fastq/SAMPLE_R1.fastq"
qsubs --names gzip_fastqc --array names --cmd "gzip fastq/SAMPLE_R2.fastq"
 
#---------- FastQC

module load fastqc/0.11.5
qsubs --names fastqc_pretrim --array names --cmd "fastqc --outdir fastqc fastq/SAMPLE_R1.fastq.gz"
qsubs --names fastqc_pretrim --array names --cmd "fastqc --outdir fastqc fastq/SAMPLE_R2.fastq.gz"
 
#---------- Trimgalore

module load trimgalore/0.4.4
qsubs --names trimgalore_fastqc --array names --cmd "trim_galore --fastqc --length 50 --output_dir trimgalore --paired fastq/SAMPLE_R1.fastq.gz fastq/SAMPLE_R2.fastq.gz"
 
#--------- STAR INDEX
 
module load star/2.5.3a
STAR --help
qsubs --names star_index --cores 20 --cmd "STAR --runThreadN 20 --runMode genomeGenerate --genomeDir star_index_150bp --genomeFastaFiles Ensembl_GRCh37_p13_Unmasked_noscaffolds.fa --sjdbGTFfile gencode_v19_annotation.gtf --sjdbOverhang 150"
 
#---------- STAR

module load star/2.5.3a
qsubs --names star_transcriptome --cores 6 --array names --cmd "STAR --runMode alignReads --runThreadN 6 \
--genomeDir /home/lee.marshall/labrie-primary/Bioinformatics_core/transcriptomes/Human/Ensembl_GRCh37_Gencode_v19/star_index_150bp \
--genomeLoad NoSharedMemory --readFilesIn trimgalore/SAMPLE_R1_val_1.fq.gz trimgalore/SAMPLE_R2_val_2.fq.gz \
--readFilesCommand zcat --outFileNamePrefix star/SAMPLE --outReadsUnmapped None --outSAMtype BAM SortedByCoordinate \
--outFilterMismatchNoverLmax 0.1 --quantMode GeneCounts"
 
#---------- Multiqc

qsubs --names multiqc_posttrim --cmd "multiqc ." 
 
#---------- STAR gene counts Stranded counts
 
for i in `cat names`; do awk -v OFS='\t' 'FNR>4{print $1,$4}' star/${i}ReadsPerGene.out.tab | sed -e 's/\..*\t/\t/' > edgeR/genecounts/${i} ; done
 
#---------- EdgeR

rm(list=ls(all=TRUE))
if (!requireNamespace("BiocManager", quietly = TRUE)) + install.packages("BiocManager")
BiocManager::install("dendextend", version = "3.8")
 
library(edgeR)
library(readr)
library(ggfortify)
library(dendextend)
library(reshape2)
library(ExpressionNormalizationWorkflow)
library(sva)
library("AnnotationDbi")
library("org.Hs.eg.db")
library(calibrate)
library(gplots)
library(viridis)
library(vegan)
library(pheatmap)
library(RColorBrewer)
library(RUVSeq)
 
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD/PD_GEO_models/GSE125239_PDvsCTRL_human_fibroblasts_iDANs/edgeR")
covar <- read_delim("covar.csv",",",escape_double=FALSE,trim_ws=TRUE)
rownames(covar) <- covar$SAMPLE
 
#---------- Counts
 
counts <- readDGE(covar$SAMPLE,path="genecounts",columns=c(1,2),header=FALSE)
counts <- counts$counts
 
#---------- DGEList 
 
y <- DGEList(counts, group=covar$GROUP)
 
#---------- Filtering
 
y <- y[rowSums(cpm(y)>1) >= ncol(counts), , keep.lib.sizes=FALSE]
dim(y) #[1] 9686  36
 
#---------- TMM Normalization
 
y <- calcNormFactors(y,method="TMM")
 
#---------- CPM
 
cpm <- cpm(y,normalized.lib.sizes=TRUE, log=FALSE)
write.csv(cpm,file="cpm.csv")
logcpm <- cpm(y,normalized.lib.sizes=TRUE, log=TRUE)
write.csv(logcpm, file="logcpm.csv")
 
#------- Pearsons Correlation
 
correl <- cor(logcpm, method ="pearson")
correl <- melt(correl, na.rm = TRUE)
mean(correl$value,na.rm=FALSE)
# 0.9003221
 
#---------- Outliers Below correlation >= 0.9
 
aggregate(correl$value, by=list(Category=correl$Var2), FUN=mean)
 
#---------- PCA Plots
 
library(RColorBrewer)
colors <- brewer.pal(4, "Set2")
plotPCA(logcpm, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16)[as.factor(covar$DISEASE)], plot3d=TRUE)
 
#---------- ExpressionNormalizationWorkflow
 
expSet <- expSetobj(logcpm,covar)
 
#---------- PVCA
 
pvcAnaly(expSet, 0.75, c("DISEASE","CELLTYPE"))
 
#---------- Design
 
design <- model.matrix(~ 0 + GROUP, data=covar)
colnames(design)[1:4] <- c("CTRL_fibroblasts", "CTRL_iDANs", "PD_fibroblasts","PD_iDANs")
 
#---------- Estimate Dispersion
 
y <- estimateDisp(y, design)

#---------- Quasi-likelihood Fit
 
fit <- glmQLFit(y, design)

#---------- Contrast
 
iDANs <- makeContrasts(PD_iDANs-CTRL_iDANs, levels=design)
fibroblasts <- makeContrasts(PD_fibroblasts-CTRL_fibroblasts, levels=design)
 
#--------- Quasi-likelihood FTest
 
PDvsCTRL_iDANs <- glmQLFTest(fit, contrast=iDANs)
PDvsCTRL_iDANs <- topTags(PDvsCTRL_iDANs, n=Inf, adjust.method="BH", sort="none")$table
PDvsCTRL_fibroblasts <- glmQLFTest(fit, contrast=fibroblasts)
PDvsCTRL_fibroblasts <- topTags(PDvsCTRL_fibroblasts, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
columns(org.Hs.eg.db)
PDvsCTRL_iDANs$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_iDANs), column="SYMBOL", keytype="ENSEMBL", multiVals="first")
PDvsCTRL_iDANs$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_iDANs), column="ENTREZID", keytype="ENSEMBL", multiVals="first")
PDvsCTRL_fibroblasts$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_fibroblasts), column="SYMBOL", keytype="ENSEMBL", multiVals="first")
PDvsCTRL_fibroblasts$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_fibroblasts), column="ENTREZID", keytype="ENSEMBL", multiVals="first")
 
#---------- combine gene names & cpm counts
 
PDvsCTRL_iDANs <- cbind(PDvsCTRL_iDANs,cpm)
write.csv(PDvsCTRL_iDANs, file="iDANs_RNAseq_glmQLF_PDvsCTRL_contrast_cpm.csv")
PDvsCTRL_fibroblasts <- cbind(PDvsCTRL_fibroblasts,cpm)
write.csv(PDvsCTRL_fibroblasts, file="fibroblasts_RNAseq_glmQLF_PDvsCTRL_contrast_cpm.csv")
 
#---------- Filter FDR <= 0.05
 
PDvsCTRL_iDANs_FDR <- PDvsCTRL_iDANs[PDvsCTRL_iDANs$FDR <= 0.05,]
write.csv(PDvsCTRL_iDANs_FDR, file="iDANs_RNAseq_glmQLF_PDvsCTRL_contrast_cpm_0.05FDR.csv")
PDvsCTRL_fibroblasts_FDR <- PDvsCTRL_fibroblasts[PDvsCTRL_fibroblasts$FDR <= 0.05,]
write.csv(PDvsCTRL_fibroblasts_FDR, file="fibroblasts_RNAseq_glmQLF_PDvsCTRL_contrast_cpm_0.05FDR.csv")
 
#---------- EdgeR RUVseq
 
empirical <- PDvsCTRL_iDANs$PValue >= 0.25 & PDvsCTRL_fibroblasts$PValue >= 0.25 
 
#---------- RUVg
 
logcpm_ruvg <- RUVg(logcpm, empirical, k=1, isLog=TRUE)$normalizedCounts
covar$RUVg <- round(RUVg(logcpm, empirical, k=1, isLog=TRUE)$W, digits=2)
 
#---------- PCA
 
plotPCA(logcpm_ruvg, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm_ruvg, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16)[as.factor(covar$DISEASE)])
 
#---------- Expression Set
 
expSet <- expSetobj(logcpm_ruvg,covar)
 
#---------- PVCA
 
pvcAnaly(expSet, 0.75, c("DISEASE","CELLTYPE"))
 
#---------- Design
 
design1 <- model.matrix(~ 0 + GROUP + RUVg, data=covar)
colnames(design1)[1:4] <- c("CTRL_fibroblasts", "CTRL_iDANs", "PD_fibroblasts","PD_iDANs")
 
#---------- Estimate Dispersion
 
y1 <- estimateDisp(y, design1)
 
#---------- Quasi-likelihood Fit
 
fit1 <- glmQLFit(y1, design1)
 
#---------- Contrast
 
iDANs <- makeContrasts(PD_iDANs-CTRL_iDANs, levels=design1)
fibroblasts <- makeContrasts(PD_fibroblasts-CTRL_fibroblasts, levels=design1)
 
#--------- Quasi-likelihood FTest
 
PDvsCTRL_iDANs_RUVg <- glmQLFTest(fit1, contrast=iDANs)
PDvsCTRL_iDANs_RUVg <- topTags(PDvsCTRL_iDANs_RUVg, n=Inf, adjust.method="BH", sort="none")$table
PDvsCTRL_fibroblasts_RUVg <- glmQLFTest(fit1, contrast=fibroblasts)
PDvsCTRL_fibroblasts_RUVg <- topTags(PDvsCTRL_fibroblasts_RUVg, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
PDvsCTRL_iDANs_RUVg$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_iDANs_RUVg), column="SYMBOL", keytype="ENSEMBL", multiVals="first")
PDvsCTRL_iDANs_RUVg$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_iDANs_RUVg), column="ENTREZID", keytype="ENSEMBL", multiVals="first")
PDvsCTRL_fibroblasts_RUVg$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_fibroblasts_RUVg), column="SYMBOL", keytype="ENSEMBL", multiVals="first")
PDvsCTRL_fibroblasts_RUVg$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_fibroblasts_RUVg), column="ENTREZID", keytype="ENSEMBL", multiVals="first")
 
#---------- combine gene names & cpm counts
 
PDvsCTRL_iDANs_RUVg <- cbind(PDvsCTRL_iDANs_RUVg,logcpm_ruvg)
write.csv(PDvsCTRL_iDANs_RUVg, file="iDANs_RNAseq_glmQLF_PDvsCTRL_RUVg_contrast_logcpmRUVg.csv")
PDvsCTRL_fibroblasts_RUVg <- cbind(PDvsCTRL_fibroblasts_RUVg,logcpm_ruvg)
write.csv(PDvsCTRL_fibroblasts_RUVg, file="fibroblasts_RNAseq_glmQLF_PDvsCTRL_RUVg_contrast_logcpmRUVg.csv")
 
#---------- Filter FDR <= 0.05
 
PDvsCTRL_iDANs_RUVg_FDR <- PDvsCTRL_iDANs_RUVg[PDvsCTRL_iDANs_RUVg$FDR <= 0.05,]
write.csv(PDvsCTRL_iDANs_RUVg_FDR, file="iDANs_RNAseq_glmQLF_PDvsCTRL_RUVg_contrast_logcpmRUVg_0.05FDR.csv")
PDvsCTRL_fibroblasts_RUVg_FDR <- PDvsCTRL_fibroblasts_RUVg[PDvsCTRL_fibroblasts_RUVg$FDR <= 0.05,]
write.csv(PDvsCTRL_fibroblasts_RUVg_FDR, file="fibroblasts_RNAseq_glmQLF_PDvsCTRL_RUVg_contrast_logcpmRUVg_0.05FDR.csv")
 
 
#---------- TET2
 
TET2_cpm <- data.frame(t(PDvsCTRL_iDANs[grepl("TET2",PDvsCTRL_iDANs$SYMBOL),8:43]))
TET2_cpm <- cbind(rep(c("CTRL_fibroblasts", "CTRL_iDANs", "PD_fibroblasts","PD_iDANs"),times=c(10,8,9,9)),TET2_cpm)
colnames(TET2_cpm) <-c("Condition","Tet2")
TET2_cpm$Condition <- factor(TET2_cpm$Condition, levels=c("CTRL_fibroblasts", "PD_fibroblasts", "CTRL_iDANs", "PD_iDANs"))
 
ggplot(data=TET2_cpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(20,80), breaks=seq(20,80,10), expand=c(0,0)) +
labs(title="Celltypes",x="",y="TET2 (cpm)") +
theme_classic()
 
TET2_RUVglogcpm <- data.frame(t(PDvsCTRL_iDANs_RUVg[grepl("TET2",PDvsCTRL_iDANs_RUVg$SYMBOL),8:43]))
TET2_RUVglogcpm <- cbind(rep(c("CTRL_fibroblasts", "CTRL_iDANs", "PD_fibroblasts","PD_iDANs"),times=c(10,8,9,9)),TET2_RUVglogcpm)
colnames(TET2_RUVglogcpm) <-c("Condition","Tet2")
TET2_RUVglogcpm$Condition <- factor(TET2_RUVglogcpm$Condition, levels=c("CTRL_fibroblasts", "PD_fibroblasts", "CTRL_iDANs", "PD_iDANs"))
 
ggplot(data=TET2_RUVglogcpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(4.6,5.8), breaks=seq(4.6,5.8,0.2), expand=c(0,0)) +
labs(title="DA Neurons", x="",y="TET2 RUVg Adjusted (logcpm)") +
theme_classic()


#------------------------------ PD isolated neuronal stem cells 

#--------- Extract Counts
 
for i in `ls *csv` ; do awk -v OFS='\t' -F'[_;]' 'NR>1{print $1,$4}' ${i} > ${i}.tsv ; done
while read line ; do mv $(awk '{print $1".tsv",$2}' <<<$line) ; done < names
 
for i in `cat names` ;
do if [ $i == "SVZ_043" ] ;
then awk -v OFS='\t' 'BEGIN{print "GENES","'${i}'"}{print $0}' ${i} > counts ;
else awk -v OFS='\t' 'BEGIN{print "'${i}'"}{print $2}' ${i} > counts1 ;
paste counts counts1 > counts2 ;
mv counts2 counts;
fi ;
done
 
#---------- EdgeR

rm(list=ls(all=TRUE))
if (!requireNamespace("BiocManager", quietly = TRUE)) + install.packages("BiocManager")
BiocManager::install("dendextend", version = "3.8")
 
library(edgeR)
library(readr)
library(ggfortify)
library(dendextend)
library(reshape2)
library(ExpressionNormalizationWorkflow)
library(sva)
library("AnnotationDbi")
library("org.Hs.eg.db")
library(calibrate)
library(gplots)
library(viridis)
library(vegan)
library(pheatmap)
library(RColorBrewer)
library(RUVSeq)
 
#---------- Import
 
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD/PD_GEO_models/GSE130752_PDvsCTRL_human_NScs_microglia/paper")
covar <- read_delim("covar.csv",",",escape_double=FALSE,trim_ws=TRUE)
rownames(covar) <- covar$SAMPLE
 
#---------- Counts
 
counts <- read_delim("rawcounts/counts.tsv", "\t", escape_double = FALSE, trim_ws = TRUE)
counts <- aggregate(counts[,2:23],by=counts[,1],sum)
rownames(counts) <- counts$GENES
counts <- counts[,-1]
counts <- counts[complete.cases(counts),]
 
#---------- DGEList 
 
y <- DGEList(counts, group=covar$GROUP)
 
#---------- Filtering
 
y <- y[rowSums(cpm(y)>1) >= ncol(counts)-1, , keep.lib.sizes=FALSE]
dim(y) [1] 8328 22
 
#---------- TMM Normalization
 
y <- calcNormFactors(y,method="TMM")
 
#---------- CPM
 
cpm <- cpm(y,normalized.lib.sizes=TRUE, log=FALSE)
write.csv(cpm,file="cpm.csv")
logcpm <- cpm(y,normalized.lib.sizes=TRUE, log=TRUE)
write.csv(logcpm, file="logcpm.csv")
 
#------- Pearsons Correlation
 
correl <- cor(logcpm, method ="pearson")
correl <- melt(correl, na.rm = TRUE)
mean(correl$value,na.rm=FALSE)
library(corrplot)
colramp <- colorRampPalette(c("#053061","#2166AC","#4393C3","#92C5DE","#D1E5F0","#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))
corrplot(correl, method="circle", col = colramp(200), title = "Pearson Correlation",mar = c(1, 1, 2, 1), order="hclust", addrect=2,tl.cex = 0.4,tl.col = "black")
 
#---------- Outliers Below correlation >= 0.9
 
aggregate(correl$value, by=list(Category=correl$Var2), FUN=mean)
 
#---------- PCA Plots
 
library(RColorBrewer)
colors <- brewer.pal(6, "Set2")
plotPCA(logcpm, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16,17)[as.factor(covar$CELLTYPE)], plot3d=TRUE)
 
#----------- ExpressionNormalizationWorkflow
 
expSet <- expSetobj(logcpm,covar)
 
#---------- PVCA
 
pvcAnaly(expSet, 0.75, c("DISEASE","CELLTYPE","AGE","SEX"))
 
#---------- EdgeR
 
design <- model.matrix(~ 0 + GROUP + AGE + SEX, data=covar)
colnames(design)[1:6] <- c("CTRL_Microglia", "CTRL_NSCs", "CTRL_SVZ", "PD_Microglia", "PD_NSCs", "PD_SVZ")
 
#---------- Estimate Dispersion
 
y <- estimateDisp(y, design)

#---------- Quasi-likelihood Fit
 
fit <- glmQLFit(y, design)

#---------- Contrast
 
SVZ <- makeContrasts(PD_SVZ-CTRL_SVZ, levels=design)
NSCs <- makeContrasts(PD_NSCs-CTRL_NSCs, levels=design)
Microglia <- makeContrasts(PD_Microglia-CTRL_Microglia, levels=design)
 
#--------- Quasi-likelihood FTest
 
PDvsCTRL_SVZ <- glmQLFTest(fit, contrast=SVZ)
PDvsCTRL_SVZ <- topTags(PDvsCTRL_SVZ, n=Inf, adjust.method="BH", sort="none")$table
 
PDvsCTRL_NSCs <- glmQLFTest(fit, contrast=NSCs)
PDvsCTRL_NSCs <- topTags(PDvsCTRL_NSCs, n=Inf, adjust.method="BH", sort="none")$table
 
PDvsCTRL_Microglia <- glmQLFTest(fit, contrast=Microglia)
PDvsCTRL_Microglia <- topTags(PDvsCTRL_Microglia, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
columns(org.Hs.eg.db)
 
PDvsCTRL_SVZ$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_SVZ), column="SYMBOL", keytype="SYMBOL", multiVals="first")
PDvsCTRL_SVZ$ENSEMBL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_SVZ), column="ENSEMBL", keytype="SYMBOL", multiVals="first")
PDvsCTRL_SVZ$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_SVZ), column="ENTREZID", keytype="SYMBOL", multiVals="first")
 
PDvsCTRL_NSCs$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_NSCs), column="SYMBOL", keytype="SYMBOL", multiVals="first")
PDvsCTRL_NSCs$ENSEMBL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_NSCs), column="ENSEMBL", keytype="SYMBOL", multiVals="first")
PDvsCTRL_NSCs$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_NSCs), column="ENTREZID", keytype="SYMBOL", multiVals="first")
 
PDvsCTRL_Microglia$SYMBOL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_Microglia), column="SYMBOL", keytype="SYMBOL", multiVals="first")
PDvsCTRL_Microglia$ENSEMBL <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_Microglia), column="ENSEMBL", keytype="SYMBOL", multiVals="first")
PDvsCTRL_Microglia$ENTREZID <- mapIds(org.Hs.eg.db, keys=row.names(PDvsCTRL_Microglia), column="ENTREZID", keytype="SYMBOL", multiVals="first")
 
#---------- combine gene names & cpm counts
 
PDvsCTRL_SVZ <- cbind(PDvsCTRL_SVZ, cpm)
write.csv(PDvsCTRL_SVZ, file="SVZ_RNAseq_glmQLF_PDvsCTRL_Age_Sex_contrast_cpm.csv")
 
PDvsCTRL_NSCs <- cbind(PDvsCTRL_NSCs, cpm)
write.csv(PDvsCTRL_NSCs, file="NSCs_RNAseq_glmQLF_PDvsCTRL_Age_Sex_contrast_cpm.csv")
 
PDvsCTRL_Microglia <- cbind(PDvsCTRL_Microglia, cpm)
write.csv(PDvsCTRL_Microglia, file="Microglia_RNAseq_glmQLF_PDvsCTRL_Age_Sex_contrast_cpm.csv")
 
#---------- Filter FDR <= 0.05
 
PDvsCTRL_SVZ_FDR <- PDvsCTRL_SVZ[PDvsCTRL_SVZ$FDR <= 0.05,]
write.csv(PDvsCTRL_SVZ_FDR, file="SVZ_RNAseq_glmQLF_PDvsCTRL_Age_Sex_contrast_cpm_0.05FDR.csv")
 
PDvsCTRL_NSCs_FDR <- PDvsCTRL_NSCs[PDvsCTRL_NSCs$FDR <= 0.05,]
write.csv(PDvsCTRL_NSCs_FDR, file="NSCs_RNAseq_glmQLF_PDvsCTRL_Age_Sex_contrast_cpm_0.05FDR.csv")
 
PDvsCTRL_Microglia_FDR <- PDvsCTRL_Microglia[PDvsCTRL_Microglia$FDR <= 0.05,]
write.csv(PDvsCTRL_Microglia_FDR, file="Microglia_RNAseq_glmQLF_PDvsCTRL_Age_Sex_contrast_cpm_0.05FDR.csv")
 
#---------- TET2
 
TET2_cpm <- data.frame(t(PDvsCTRL_SVZ[grepl("TET2",PDvsCTRL_SVZ$SYMBOL),-1:-8]))
TET2_cpm <- cbind(covar$GROUP, TET2_cpm)
colnames(TET2_cpm) <-c("Condition","Tet2")
TET2_cpm$Condition <- factor(TET2_cpm$Condition, levels=c("CTRL_SVZ", "PD_SVZ", "CTRL_NSCs", "PD_NSCs", "CTRL_Microglia", "PD_Microglia"))
 
ggplot(data=TET2_cpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(0,280), breaks=seq(0,280,40), expand=c(0,0)) +
labs(title="Celltypes",x="",y="TET2 (cpm)") +
theme_classic()

#------------------------------ MPTP midbrain dopaminergic neurons 

#------- EdgeR

rm(list=ls(all=TRUE))
if (!requireNamespace("BiocManager", quietly = TRUE)) + install.packages("BiocManager")
BiocManager::install("dendextend", version = "3.8")
 
library(edgeR)
library(readr)
library(ggfortify)
library(dendextend)
library(reshape2)
library(ExpressionNormalizationWorkflow)
library(sva)
library("AnnotationDbi")
library("org.Mm.eg.db")
library(calibrate)
library(gplots)
library(viridis)
library(vegan)
library(pheatmap)
library(RColorBrewer)
library(RUVSeq)
 
#---------- Import
 
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD/PD_GEO_models/GSE54795_MPTP_Midbrain_DAneurons_RNAseq")
covar <- read_delim("covar.csv",",",escape_double=FALSE,trim_ws=TRUE)
rownames(covar) <- covar$SAMPLE
 
#---------- Counts
 
rawcounts <- read_delim("GSE54795_RNASEQ_counts_DAneurons_SN_MPTPvsSaline_mm10.txt","\t",escape_double=FALSE,trim_ws=TRUE)
counts <- rawcounts[,-1:-2]
rownames(counts) <- rawcounts$Entrez
 
#---------- DGEList 
 
y <- DGEList(counts, group=covar$GROUP)
 
#---------- Filtering
 
y <- y[rowSums(cpm(y)>1) >= ncol(counts), , keep.lib.sizes=FALSE]
dim(y) #[1] 12950     8
 
#---------- TMM Normalization
 
y <- calcNormFactors(y,method="TMM")
 
#---------- CPM
 
cpm <- cpm(y,normalized.lib.sizes=TRUE, log=FALSE)
write.csv(cpm,file="cpm.csv")
logcpm <- cpm(y,normalized.lib.sizes=TRUE, log=TRUE)
write.csv(logcpm, file="logcpm.csv")
 
#------- Pearsons Correlation
 
correl <- cor(logcpm, method ="pearson")
correl <- melt(correl, na.rm = TRUE)
mean(correl$value,na.rm=FALSE)
# 0.9868198
 
#---------- Outliers Below correlation >= 0.9
 
aggregate(correl$value, by=list(Category=correl$Var2), FUN=mean)
 
#---------- PCA Plots
 
library(RColorBrewer)
colors <- brewer.pal(4, "Set2")
plotPCA(logcpm, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16)[as.factor(covar$GROUP)], plot3d=TRUE)
 
#----------- ExpressionNormalizationWorkflow
 
expSet <- expSetobj(logcpm,covar)
 
#---------- PVCA
 
pvcAnaly(expSet, 0.75, c("GROUP"))
 
#---------- EdgeR
 
design <- model.matrix(~ GROUP, data=covar) 
 
#---------- Estimate Dispersion
 
y <- estimateDisp(y, design)

#---------- Quasi-likelihood Fit
 
fit <- glmQLFit(y, design)

#--------- Quasi-likelihood FTest
 
qlf <- glmQLFTest(fit,coef=2)
qlf <- topTags(qlf, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
columns(org.Mm.eg.db)
qlf$symbol <- mapIds(org.Mm.eg.db, keys=row.names(qlf), column="SYMBOL", keytype="ENTREZID", multiVals="first")
qlf$ENSEMBL <- mapIds(org.Mm.eg.db, keys=row.names(qlf), column="ENSEMBL", keytype="ENTREZID", multiVals="first")
 
#---------- combine gene names & cpm counts
 
qlf <- cbind(qlf,cpm)
write.csv(qlf, file="Mouse_DAneurons_RNAseq_glmQLF_MPTPvsSaline_cpm.csv")
 
#---------- Filter FDR <= 0.05
 
qlf_FDR <- qlf[qlf$FDR <= 0.05,]
write.csv(qlf_FDR, file="Mouse_DAneurons_RNAseq_glmQLF_MPTPvsSaline_cpm_0.05FDR.csv")
 
#--------- EdgeR RUVseq
 
empirical <- qlf$PValue >= 0.5
 
#---------- RUVg
 
logcpm_ruvg <- RUVg(logcpm, empirical, k=1, isLog=TRUE)$normalizedCounts
covar$RUVg <- round(RUVg(logcpm, empirical, k=1, isLog=TRUE)$W, digits=3)
 
#---------- PCA
 
plotPCA(logcpm_ruvg, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm_ruvg, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16)[as.factor(covar$GROUP)])
 
#---------- Design
 
design1 <- model.matrix(~ GROUP + RUVg, data=covar)

#---------- Estimate Dispersion
 
y1 <- estimateDisp(y, design1)
 
#---------- Quasi-likelihood Fit
 
fit1 <- glmQLFit(y1, design1)
 
#--------- Quasi-likelihood FTest
 
qlf1 <- glmQLFTest(fit1,coef=2)
qlf1 <- topTags(qlf1, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
columns(org.Mm.eg.db)
qlf1$symbol <- mapIds(org.Mm.eg.db, keys=row.names(qlf1), column="SYMBOL", keytype="ENTREZID", multiVals="first")
qlf1$ENSEMBL <- mapIds(org.Mm.eg.db, keys=row.names(qlf1), column="ENSEMBL", keytype="ENTREZID", multiVals="first")
 
#---------- combine gene names & cpm counts
 
qlf1 <- cbind(qlf1,logcpm_ruvg)
write.csv(qlf1, file="Mouse_DAneurons_RNAseq_glmQLF_MPTPvsSaline_RUVg_logcpmRUVg.csv")
 
#---------- Filter FDR <= 0.1
 
qlf1_FDR <- qlf1[qlf1$FDR <= 0.05,]
write.csv(qlf1_FDR, file="Mouse_DAneurons_RNAseq_glmQLF_MPTPvsSaline_RUVg_logcpmRUVg_0.05FDR.csv")
 
#---------- TET2
 
TET2_cpm <- data.frame(t(qlf[grepl("Tet2",qlf$symbol),8:15]))
TET2_cpm <- cbind(rep(c("MPTP","Saline"),each=4),TET2_cpm)
colnames(TET2_cpm) <-c("Condition","Tet2")
TET2_cpm$Condition <- factor(TET2_cpm$Condition, levels=c("Saline","MPTP"))
 
ggplot(data=TET2_cpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(60,160), breaks=seq(60,160,20), expand=c(0,0)) +
labs(title="DA Neurons",x="",y="TET2 (cpm)") +
theme_classic()
 
TET2_RUVglogcpm <- data.frame(t(qlf1[grepl("Tet2",qlf1$symbol),8:15]))
TET2_RUVglogcpm <- cbind(rep(c("MPTP","Saline"),each=4),TET2_RUVglogcpm)
colnames(TET2_RUVglogcpm) <-c("Condition","Tet2")
TET2_RUVglogcpm$Condition <- factor(TET2_RUVglogcpm$Condition, levels=c("Saline","MPTP"))
 
ggplot(data=TET2_RUVglogcpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(6,7.4), breaks=seq(6,7.4,0.2), expand=c(0,0)) +
labs(title="DA Neurons", x="",y="TET2 RUVg Adjusted (logcpm)") +
theme_classic()

#------------------------------ 6-OHDA midbrain dopaminergic neurons 

#-------- EdgeR

rm(list=ls(all=TRUE))
if (!requireNamespace("BiocManager", quietly = TRUE)) + install.packages("BiocManager")
BiocManager::install("dendextend", version = "3.8")
 
library(edgeR)
library(readr)
library(ggfortify)
library(dendextend)
library(reshape2)
library(ExpressionNormalizationWorkflow)
library(sva)
library("AnnotationDbi")
library("org.Mm.eg.db")
library(calibrate)
library(gplots)
library(viridis)
library(vegan)
library(pheatmap)
library(RColorBrewer)
library(RUVSeq)
 
#---------- Import
 
setwd("/Volumes/projects_secondary/labrie/lee_marshall/PD/PD_GEO_models/GSE108370_6OHDA_Midbrain_DAneurons_RNAseq")
covar_all <- read_delim("covar.csv",",",escape_double=FALSE,trim_ws=TRUE)
rownames(covar_all) <- covar_all$SAMPLE
covar <- covar_all[covar_all$TRAP == "mDA",]
rownames(covar) <- covar$SAMPLE
 
#---------- Counts
 
rawcounts <- read_delim("GSE108370_6ohda_trap_processed.csv",",",escape_double=FALSE,trim_ws=TRUE)
rawcounts <- rawcounts[!duplicated(rawcounts$Genes),]
counts_all <- rawcounts[,-1]
rownames(counts_all) <- rawcounts$Genes
counts <- counts[,covar_all$TRAP == "mDA"]
rownames(counts) <- rawcounts$Genes
 
#---------- DGEList 
 
y <- DGEList(counts, group=covar$GROUP)
 
#---------- Filtering
 
y <- y[rowSums(cpm(y)>1) >= ncol(counts), , keep.lib.sizes=FALSE]
dim(y) #[1] 12469    10
 
#---------- TMM Normalization
 
y <- calcNormFactors(y,method="TMM")
 
#---------- CPM
 
cpm <- cpm(y,normalized.lib.sizes=TRUE, log=FALSE)
write.csv(cpm,file="cpm.csv")
logcpm <- cpm(y,normalized.lib.sizes=TRUE, log=TRUE)
write.csv(logcpm, file="logcpm.csv")
 
#------- Pearsons Correlation
 
correl <- cor(logcpm, method ="pearson")
correl <- melt(correl, na.rm = TRUE)
mean(correl$value,na.rm=FALSE)
# 0.98406
 
#---------- Outliers Below correlation >= 0.9
 
aggregate(correl$value, by=list(Category=correl$Var2), FUN=mean)
 
#---------- PCA Plots
 
library(RColorBrewer)
colors <- brewer.pal(4, "Set2")
plotPCA(logcpm, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16,17,18,19)[as.factor(covar$Mice)], plot3d=TRUE)
 
#---------- ExpressionNormalizationWorkflow
 
expSet <- expSetobj(logcpm,covar)
 
#---------- PVCA
 
pvcAnaly(expSet, 0.75, c("GROUP","Mice"))
  
#--------- EdgeR
 
design <- model.matrix(~ GROUP + Mice, data=covar) 
 
#---------- Estimate Dispersion
 
y <- estimateDisp(y, design)

#---------- Quasi-likelihood Fit
 
fit <- glmQLFit(y, design)

#--------- Quasi-likelihood FTest
 
qlf <- glmQLFTest(fit,coef=2)
qlf <- topTags(qlf, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
columns(org.Mm.eg.db)
qlf$SYMBOL <- mapIds(org.Mm.eg.db, keys=row.names(qlf), column="SYMBOL", keytype="SYMBOL", multiVals="first")
qlf$ENTREZID <- mapIds(org.Mm.eg.db, keys=row.names(qlf), column="ENTREZID", keytype="SYMBOL", multiVals="first")
qlf$ENSEMBL <- mapIds(org.Mm.eg.db, keys=row.names(qlf), column="ENSEMBL", keytype="SYMBOL", multiVals="first")
 
#---------- combine gene names & cpm counts
 
qlf <- cbind(qlf,cpm)
write.csv(qlf, file="Mouse_DAneurons_RNAseq_glmQLF_6OHDA_mice_cpm.csv")
 
#---------- Filter FDR <= 0.05
 
qlf_FDR <- qlf[qlf$FDR <= 0.05,]
write.csv(qlf_FDR, file="Mouse_DAneurons_RNAseq_glmQLF_6OHDA_mice_cpm_0.05FDR.csv")
 
#---------- EdgeR RUVseq
 
empirical <- qlf$PValue >= 0.5
 
#---------- RUVg
 
logcpm_ruvg <- RUVg(logcpm, empirical, k=1, isLog=TRUE)$normalizedCounts
covar$RUVg <- round(RUVg(logcpm, empirical, k=1, isLog=TRUE)$W, digits=3)
 
#---------- PCA
 
plotPCA(logcpm_ruvg, k=2, labels=TRUE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], cex=1)
plotPCA(logcpm_ruvg, k=2, labels=FALSE, isLog=TRUE, col=colors[as.factor(covar$GROUP)], pch=c(15,16,17,18,19)[as.factor(covar$Mice)])
 
#---------- Expression Set
 
expSet <- expSetobj(logcpm_ruvg,covar)
 
#---------- PVCA
 
pvcAnaly(expSet, 0.75, c("GROUP","Mice"))
 
#---------- Design
 
design1 <- model.matrix(~ GROUP + Mice + RUVg, data=covar)

#---------- Estimate Dispersion
 
y1 <- estimateDisp(y, design1)
 
#---------- Quasi-likelihood Fit
 
fit1 <- glmQLFit(y1, design1)
 
#--------- Quasi-likelihood FTest
 
qlf1 <- glmQLFTest(fit1,coef=2)
qlf1 <- topTags(qlf1, n=Inf, adjust.method="BH", sort="none")$table
 
#---------- Change Names to Entrez
 
columns(org.Mm.eg.db)
qlf1$SYMBOL <- mapIds(org.Mm.eg.db, keys=row.names(qlf1), column="SYMBOL", keytype="SYMBOL", multiVals="first")
qlf1$ENTREZID <- mapIds(org.Mm.eg.db, keys=row.names(qlf1), column="ENTREZID", keytype="SYMBOL", multiVals="first")
qlf1$ENSEMBL <- mapIds(org.Mm.eg.db, keys=row.names(qlf1), column="ENSEMBL", keytype="SYMBOL", multiVals="first")
 
#---------- combine gene names & cpm counts
 
qlf1 <- cbind(qlf1,logcpm_ruvg)
write.csv(qlf1, file="Mouse_DAneurons_RNAseq_glmQLF_6OHDA_mice_RUVg_logcpmRUVg.csv")
 
#---------- Filter FDR <= 0.1
 
qlf1_FDR <- qlf1[qlf1$FDR <= 0.05,]
write.csv(qlf1_FDR, file="Mouse_DAneurons_RNAseq_glmQLF_6OHDA_mice_RUVg_logcpmRUVg_0.05FDR.csv")
 
#---------- TET2
 
TET2_cpm <- data.frame(t(qlf[grepl("Tet2",qlf$SYMBOL),9:18]))
TET2_cpm <- cbind(rep(c("6OHDA_Side","no6OHDA_Side"),each=5),TET2_cpm)
colnames(TET2_cpm) <-c("Condition","Tet2")
TET2_cpm$Condition <- factor(TET2_cpm$Condition, levels=c("6OHDA_Side","no6OHDA_Side"))
 
ggplot(data=TET2_cpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(18,32), breaks=seq(18,32,2), expand=c(0,0)) +
labs(title="DA Neurons",x="",y="TET2 (cpm)") +
theme_classic()
 
TET2_RUVglogcpm <- data.frame(t(qlf1[grepl("Tet2",qlf1$SYMBOL),9:18]))
TET2_RUVglogcpm <- cbind(rep(c("6OHDA_Side","no6OHDA_Side"),each=5),TET2_RUVglogcpm)
colnames(TET2_RUVglogcpm) <-c("Condition","Tet2")
TET2_RUVglogcpm$Condition <- factor(TET2_RUVglogcpm$Condition, levels=c("6OHDA_Side","no6OHDA_Side"))
 
ggplot(data=TET2_RUVglogcpm, aes(x=Condition, y=Tet2, colour=Condition)) +
geom_boxplot() +
geom_dotplot(aes(fill=Condition), binaxis='y', stackdir='center', dotsize=0.5) +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Dark2") +
scale_y_continuous(limits=c(4.2,5.2), breaks=seq(4.2,5.2,0.2), expand=c(0,0)) +
labs(title="DA Neurons", x="",y="TET2 RUVg Adjusted (logcpm)") +
theme_classic()

